{"ast":null,"code":"import { createElementVNode as _createElementVNode, Transition as _Transition, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"questionset card\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"tw-heading text-center\"\n}, \"Payment\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"content\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"mywidget\"\n})])], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;gCAGEA,oBAKM,KALN,EAKM;EALDC,KAAK,EAAC;AAKL,CALN,EAA6B,cAC5BD,oBAA+C,IAA/C,EAA+C;EAA3CC,KAAK,EAAC;AAAqC,CAA/C,EAAmC,SAAnC,CAD4B,eAE5BD,oBAEM,KAFN,EAEM;EAFDC,KAAK,EAAC;AAEL,CAFN,EAAoB,cACnBD,oBAAyB,KAAzB,EAAyB;EAApBE,EAAE,EAAC;AAAiB,CAAzB,CADmB,CAApB,CAF4B,CAA7B;;AAAA;;;uBAFDC,aAQaC,WARb,EAQa;IARDC,MAAM,EAAN;EAQC,CARb,EAAkB;sBAEjB,MAKM,CALNC,UAKM,EAPW;;;;EAAA,CAAlB","names":["_createElementVNode","class","id","_createBlock","_Transition","appear","_hoisted_1"],"sourceRoot":"","sources":["/Users/lukedavid/Web/newco/src/views/ChoosePayment.vue"],"sourcesContent":["<template>\n\t<Transition appear>\n\t\t\n\t\t<div class=\"questionset card\">\n\t\t\t<h1 class=\"tw-heading text-center\">Payment</h1>\n\t\t\t<div class=\"content\">\n\t\t\t\t<div id=\"mywidget\"></div>\n\t\t\t</div>\n\t\t</div>\n\t</Transition>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\n\texport default {\n\t\tname: 'ChoosePayment',\n\t\tcomputed: {\n\t\t\t...mapState({\n\t\t\t\tplan_options: state => state.plan_options,\n\t\t\t\tplan_selected: state => state.plan_selected\n\t\t\t}),\n\t\t\tplan_selected: {\n\t\t\t\tget(){\n\t\t\t\t\treturn this.$store.state.plan_selected;\n\t\t\t\t},\n\t\t\t\tset(value){\n\t\t\t\t\tthis.$store.commit('updatePlans', value);\n\t\t\t\t}\n\t\t\t},\n\n\t\t},\n\t\tmethods: {\n\t\t\tcreateOrder: async (amount) => { // eslint-disable-line no-undef, no-unused-vars\n\t\t\t\t// Fetching the data from  your server\n\t\t\t\tconst title = `Title-${ new Date().toUTCString() }`;\n\t\t\t\tawait fetch(\"http://localhost:4200/create-payment-intent\", {\n\t\t\t\t// await fetch(\"https://anddone.giganticdesign.com/create-payment-intent\", {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tamount: amount,\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tshortDescription: \"shortDescription\",\n\t\t\t\t\t\tpaymentDescription: \"paymentDescription\",\n\t\t\t\t\t\tinvoiceNumber: \"invoiceNumber-005\",\n\t\t\t\t\t\texpiresIn: \"3000\",\n\t\t\t\t\t\tintent: { \n\t\t\t\t\t\t\tpaymentTypes: [\n\t\t\t\t\t\t\t\t\"DebitCard\",\n\t\t\t\t\t\t\t\t\"CreditCard\",\n\t\t\t\t\t\t\t\t\"ACH\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t}).then(res=> res.json()).then((res) => {\n\t\t\t\t\tlet pluginOption ={\n\t\t\t\t\t\ttheme : \"classic\",  // classic, modern, minimal, vibrant\n\t\t\t\t\t\tcontainer: \"mywidget\",  // id of the div to render the widget\n\t\t\t\t\t}\n\n\t\t\t\t\t//Assigning the payment token received from your server\n\t\t\t\t\tlet paymentIntentToken=res.paymentIntentToken;\n\t\t\t\t\t// Initialize the plugin with token and options\n\n\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\tlet andDone = new AndDone(paymentIntentToken, pluginOption); \n\n\t\t\t\t\t// Using onload function to perform some action after the widget is loaded  and ready\n\t\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\t\tandDone.onload = (plugin) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"Widget loaded successfully\");\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tmounted(){\n\t\t\tconst plan = this.plan_options.filter(function(opt){\n\t\t\t\treturn opt.selected;\n\t\t\t})[0]\n\t\t\tthis.createOrder(plan.premium.amount);\n\t\t}\n\t}\n</script>"]},"metadata":{},"sourceType":"module"}