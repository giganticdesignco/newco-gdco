{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"for\"];\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"label mb-2 text-blue-500 font-medium\"\n}, \"Company Name\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = [\"type\", \"id\", \"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"label\", {\n    for: $props.id,\n    class: \"text-left block max-w-sm m-auto mb-5\"\n  }, [_hoisted_2, _createElementVNode(\"input\", {\n    class: \"w-full\",\n    type: $props.type,\n    id: $props.id,\n    value: $props.modelValue,\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.updateInput && $options.updateInput(...args))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_3)], 8\n  /* PROPS */\n  , _hoisted_1);\n}","map":{"version":3,"mappings":";;;gCAEIA,oBAAoE,KAApE,EAAoE;EAA/DC,KAAK,EAAC;AAAyD,CAApE,EAAkD,cAAlD,EAA8D;AAAA;AAA9D;;;;uBADJC,oBAGQ,OAHR,EAGQ;IAHAC,GAAG,EAAEC,SAGL;IAHSH,KAAK,EAAC;EAGf,CAHR,GACII,YACAL,oBAAqF,OAArF,EAAqF;IAA9EC,KAAK,EAAC,QAAwE;IAA9DK,IAAI,EAAEF,WAAwD;IAAjDG,EAAE,EAAEH,SAA6C;IAAxCI,KAAK,EAAEJ,iBAAiC;IAApBK,OAAK,yCAAEC,qDAAF;EAAe,CAArF;;EAAA,cAFJ;;EAAA","names":["_createElementVNode","class","_createElementBlock","for","$props","_hoisted_2","type","id","value","onInput","$options"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/Old Mac/CB/lemonade 2/src/components/BaseInput.vue"],"sourcesContent":["<template> \n<label :for=\"id\" class=\"text-left block max-w-sm m-auto mb-5\">\n    <div class=\"label mb-2 text-blue-500 font-medium\">Company Name</div>\n    <input class=\"w-full\" :type=\"type\" :id=\"id\" :value=\"modelValue\" @input=\"updateInput\">\n</label>\n</template>\n\n<script>\nexport default {\n    name: \"BaseInput\",\n    props: {\n        id: {\n        type: String,\n        default: \"\",\n    },\n    label: {\n        type: String,\n        default: \"\",\n    },\n    modelValue: {\n        type: [String, Number],\n        default: \"\",\n    },\n    type: {\n        type: String,\n        default: \"text\",\n    }\n    },\n    methods: {\n        updateInput(event) {\n            this.$emit(\"update:modelValue\", event.target.value);\n        }\n    }\n};\n</script>"]},"metadata":{},"sourceType":"module"}