{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Transition as _Transition, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"tw-card\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"tw-heading\"\n}, \"Insurance Effective Date?\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"max-w-sm m-auto text-left\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BaseInput = _resolveComponent(\"BaseInput\");\n\n  return _openBlock(), _createBlock(_Transition, {\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_BaseInput, {\n      type: \"date\",\n      id: \"insurance_effective_date\",\n      label: \"Date\",\n      max: \"999-12-31\",\n      modelValue: $options.insurance_effective_date,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $options.insurance_effective_date = $event)\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\"]), _createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"tw-btn mt-5 block m-auto\",\n      onClick: _cache[1] || (_cache[1] = (...args) => $options.nextSection && $options.nextSection(...args))\n    }, \"Next\")])])]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;EAEOA,KAAK,EAAC;;;gCACVC,oBAAqD,IAArD,EAAqD;EAAjDD,KAAK,EAAC;AAA2C,CAArD,EAAuB,2BAAvB,EAAgD;AAAA;AAAhD;;;EACKA,KAAK,EAAC;;;;;uBAHbE,aAQaC,WARb,EAQa;IARDC,MAAM,EAAN;EAQC,CARb,EAAkB;sBACjB,MAMM,CANNH,oBAMM,KANN,cAMM,CALLI,UAKK,EAJLJ,oBAGM,KAHN,cAGM,CAFLK,aAAuHC,oBAAvH,EAAuH;MAA5GC,IAAI,EAAC,MAAuG;MAAhGC,EAAE,EAAC,0BAA6F;MAAlEC,KAAK,EAAC,MAA4D;MAArDC,GAAG,EAAC,WAAiD;kBAA5BC,iCAA4B;iEAA5BA,oCAAwBC;IAAI,CAAvH;;IAAA,iBAEK,EADLZ,oBAAyF,QAAzF,EAAyF;MAAjFO,IAAI,EAAC,QAA4E;MAAnER,KAAK,EAAC,0BAA6D;MAAjCc,OAAK,yCAAEF,qDAAF;IAA4B,CAAzF,EAA4E,MAA5E,CACK,CAHN,CAIK,CANN,CAMM,EAPW;;;;EAAA,CAAlB","names":["class","_createElementVNode","_createBlock","_Transition","appear","_hoisted_2","_createVNode","_component_BaseInput","type","id","label","max","$options","$event","onClick"],"sourceRoot":"","sources":["/Users/lukedavid/Web/newco/src/views/InsuranceEffectiveDate.vue"],"sourcesContent":["<template>\n\t<Transition appear>\n\t\t<div class=\"tw-card\">\n\t\t\t<h1 class=\"tw-heading\">Insurance Effective Date?</h1>\n\t\t\t<div class=\"max-w-sm m-auto text-left\">\n\t\t\t\t<BaseInput type=\"date\" id=\"insurance_effective_date\" label=\"Date\" max=\"999-12-31\" v-model=\"insurance_effective_date\" />\n\t\t\t\t<button type=\"button\" class=\"tw-btn mt-5 block m-auto\" @click=\"nextSection\">Next</button>\n\t\t\t</div>\n\t\t</div>\n\t</Transition>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport BaseInput from \"@/components/BaseInput.vue\";\n\nexport default {\n\tname: 'InsuranceEffectiveDate',\n\tcomponents: {\n\t\tBaseInput,\n\t},\n\tcomputed: {\n\t\t...mapState({\n\t\t\tinsurance_effective_date: state => state.insurance_effective_date\n\t\t}),\n\t\tinsurance_effective_date: {\n\t\t\tget() {\n\t\t\t\treturn this.$store.state.insurance_effective_date;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$store.commit('updateInsuranceEffectiveDate', value);\n\t\t\t}\n\t\t},\n\t\troute_index: {\n\t\t\tget() {\n\t\t\t\treturn this.$store.state.curr_route_index;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$store.commit('updateRouteIndex', value);\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tnextSection: function() {\n\t\t\tthis.$router.push({name: 'brokerageAuthority'});\n\t\t},\n\t\tsetRoutes() {\n\t\t\tconst self = this;\n\t\t\tconst routes = this.$router.getRoutes();\n\t\t\tlet route_index = 0;\n\n\t\t\tthis.curr_route = this.$router.currentRoute.value;\n\t\t\t\t\n\t\t\troutes.forEach(function(route, index){\n\t\t\t\tif(route.name === self.curr_route.name) {\n\t\t\t\t\troute_index = index;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.route_index = route_index;\n\t\t},\n\t\tcreateProspect(){\n\t\t\tif(this.$store.state.usdot_data !== 'undefined') {\n\t\t\t\tconsole.log('asdf');\n\t\t\t\tconst data = { \n\t\t\t\t\tfirstname: this.$store.state.usdot_data.contactFirstName,\n\t\t\t\t\tlastname: this.$store.state.usdot_data.contactLastName,\n\t\t\t\t\tcompany: this.$store.state.usdot_data.legalName,\n\t\t\t\t\temail: this.$store.state.usdot_data.contactEmail,\n\t\t\t\t\tphone: this.$store.state.usdot_data.contactPhone,\n\t\t\t\t\tcity: this.$store.state.usdot_data.phyCity,\n\t\t\t\t\tstate: this.$store.state.usdot_data.phyState,\n\t\t\t\t\tpostal: this.$store.state.usdot_data.phyZipcode,\n\t\t\t\t};\n\n\t\t\t\t\n\t\t\t\tfetch('http://localhost:4200/create-prospect', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\t})\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconsole.log('Success:', data);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t});\n\n\t\t\t\tthis.$store.commit('updateDOTData')\n\t\t\t}\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.setRoutes();\n\t\tthis.createProspect();\n\t}\n}\n</script>"]},"metadata":{},"sourceType":"module"}