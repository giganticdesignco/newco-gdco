{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"for\"];\nconst _hoisted_2 = [\"textContent\"];\nconst _hoisted_3 = [\"type\", \"id\", \"max\", \"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"label\", {\n    for: $props.id,\n    class: \"text-left block mb-5\"\n  }, [_createElementVNode(\"div\", {\n    class: \"label mb-2 text-blue-500 font-micro font-medium uppercase tracking-wide text-sm pl-3\",\n    textContent: _toDisplayString($props.label)\n  }, null, 8, _hoisted_2), _createElementVNode(\"input\", {\n    class: \"w-full\",\n    type: $props.type,\n    id: $props.id,\n    max: $props.max,\n    value: $props.modelValue,\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.updateInput && $options.updateInput(...args))\n  }, null, 40, _hoisted_3)], 8, _hoisted_1);\n}","map":{"version":3,"mappings":";;;;;uBACAA,oBAGQ,OAHR,EAGQ;IAHAC,GAAG,EAAEC,SAGL;IAHSC,KAAK,EAAC;EAGf,CAHR,GACIC,oBAAuH,KAAvH,EAAuH;IAAlHD,KAAK,EAAC,sFAA4G;iBAArBE,iBAAQH,MAAM,MAAd;EAAqB,CAAvH,wBACAE,oBAAgG,OAAhG,EAAgG;IAAzFD,KAAK,EAAC,QAAmF;IAAzEG,IAAI,EAAEJ,WAAmE;IAA5DK,EAAE,EAAEL,SAAwD;IAAnDM,GAAG,EAAEN,UAA8C;IAAxCO,KAAK,EAAEP,iBAAiC;IAApBQ,OAAK,yCAAEC,qDAAF;EAAe,CAAhG,wBAFJ","names":["_createElementBlock","for","$props","class","_createElementVNode","_toDisplayString","type","id","max","value","onInput","$options"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/CB/Flywheel/src/components/BaseInput.vue"],"sourcesContent":["<template> \n<label :for=\"id\" class=\"text-left block mb-5\">\n    <div class=\"label mb-2 text-blue-500 font-micro font-medium uppercase tracking-wide text-sm pl-3\" v-text=\"label\"></div>\n    <input class=\"w-full\" :type=\"type\" :id=\"id\" :max=\"max\" :value=\"modelValue\" @input=\"updateInput\">\n</label>\n</template>\n\n<script>\nexport default {\n    name: \"BaseInput\",\n    props: {\n        id: {\n        type: String,\n        default: \"\",\n    },\n    label: {\n        type: String,\n        default: \"\",\n    },\n    modelValue: {\n        type: [String, Number],\n        default: \"\",\n    },\n    max: {\n        type: String,\n        default: \"1000000\"\n    },\n    type: {\n        type: String,\n        default: \"text\",\n    }\n    },\n    methods: {\n        updateInput(event) {\n            this.$emit(\"update:modelValue\", event.target.value);\n        }\n    }\n};\n</script>"]},"metadata":{},"sourceType":"module"}