{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavigationHeader = _resolveComponent(\"NavigationHeader\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_NavigationHeader), _createVNode(_component_router_view)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;6DACEA,aAAmBC,2BAAnB,GACAD,aAA2BE,sBAA3B","names":["_createVNode","_component_NavigationHeader","_component_router_view"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/CB/Flywheel2/src/App.vue"],"sourcesContent":["<template>\n  <NavigationHeader/>\n  <router-view></router-view>\n</template>\n\n<script>\nimport NavigationHeader from '@/components/NavigationHeader.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    NavigationHeader\n  },\n  methods:{\n    createOrder: async () => { // eslint-disable-line no-undef, no-unused-vars\n\n      // Fetching the data from  your server\n\n        await fetch(\"https://api.qat.anddone.com/create-payment-intent\", {\n          method: \"POST\",\n          headers: {\"Content-Type\": \"application/json\"},\n          body: JSON.stringify({\n            amount: 1,\n            title: \"Transaction Title\",\n            expiresIn: \"3000\",\n          }),\n        }).then(res=> res.json()).then((res) => {\n          \n          let pluginOption ={\n            theme : \"classic\",  // classic, modern, minimal, vibrant\n            container: \"mywidget\",  // id of the div to render the widget\n          }\n\n          //Assigning the payment token received from your server\n\n          let paymentIntentToken=res.paymentIntentToken\n\n        // Initialize the plugin with token and options\n\n          let andDone = new AndDone(paymentIntentToken, pluginOption);// eslint-disable-line no-undef, no-unused-vars\n\n\n        // Using onload function to perform some action after the widget is loaded  and ready\n          andDone.onload = (plugin) =>  // eslint-disable-line no-undef, no-unused-vars\n          {\n        \n            console.log(\"Widget loaded successfully\");\n          \n          }\n        })\n      }\n  },  \n  mounted() {\n      // this.createOrder();\n      // let andDone = new AndDone(paymentIntentToken); // eslint-disable-line no-undef, no-unused-vars\n      // fetch('https://api.qat.anddone.com')\n      //   .then(function(response){\n      //     console.log(response.json());\n      //   });\n  }\n}\n\nasync function createOrder() {\n\n  // Fetching the data from  your server\n\n    await fetch(\"http://localhost:4242/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        amount: \"111.00\",\n        title: \"Title_01_0303_20224\",\n        shortDescription: \"shortDescription\",\n        paymentDescription: \"paymentDescription\",\n        invoiceNumber: \"invoiceNumber-005\",\n        expiresIn: \"3000\",\n        intent: {\n            paymentTypes: [\n                \"DebitCard\",\n                \"CreditCard\",\n                \"ACH\"\n            ]\n        }\n    }),\n    }).then(res=> res.json()).then((res) => {\n      let pluginOption ={\n        theme : \"classic\",  // classic, modern, minimal, vibrant\n        container: \"mywidget\",  // id of the div to render the widget\n      }\n\n      //Assigning the payment token received from your server\n\n      let paymentIntentToken=res.paymentIntentToken\n      console.log(paymentIntentToken);\n     // Initialize the plugin with token and options\n\n    // eslint-disable-next-line no-undef\n      let andDone = new AndDone(paymentIntentToken, pluginOption); \n\n\n    // Using onload function to perform some action after the widget is loaded  and ready\n     // eslint-disable-next-line no-unused-vars\n      andDone.onload = (plugin) =>\n      {\n     \n         console.log(\"Widget loaded successfully\");\n       \n      }\n    })\n  }\n\n  \n\n  createOrder()\n</script>\n\n<style lang=\"scss\">\n\t\n// body {\n// \tbackground-color: #f5f5f5;\n// }\n// * {\n// \tbox-sizing: border-box;\n// }\n// #app {\n// \tfont-family: Avenir, Helvetica, Arial, sans-serif;\n// \t-webkit-font-smoothing: antialiased;\n// \t-moz-osx-font-smoothing: grayscale;\n// \ttext-align: center;\n// \tcolor: #2c3e50;\n// \tmargin-top: 60px;\n// \tpadding-bottom: 60px;\n// }\n\n// .v-enter-active,\n// .v-leave-active {\n// \ttransition: 0.5s ease-in-out;\n// }\n\n// .v-enter-from,\n// .v-leave-to {\n// \ttransform: translateY(25px);\n// \topacity: 0;\n// }\n\n// h1 {\n// \tmargin-bottom: .5em;\n// }\n\n// .content {\n// \tmargin-top: 40px;\n// }\n\n// .card {\n// \tborder-radius: 20px;\n// \tmax-width: 500px;\n// \tmargin: 0 auto;\n// \tpadding: 4rem;\n// \tbackground-color: #fff;\n// \tbox-shadow: 2.8px 2.8px 2.2px rgba(0, 0, 0, 0.02),\n// \t\t\t\t6.7px 6.7px 5.3px rgba(0, 0, 0, 0.028),\n// \t\t\t\t12.5px 12.5px 10px rgba(0, 0, 0, 0.035),\n// \t\t\t\t22.3px 22.3px 17.9px rgba(0, 0, 0, 0.042),\n// \t\t\t\t41.8px 41.8px 33.4px rgba(0, 0, 0, 0.05),\n// \t\t\t\t100px 100px 80px rgba(0, 0, 0, 0.07);\n// }\n\n// .overline {\n// \ttext-transform: uppercase;\n// \tletter-spacing: .1em;\n// \tfont-weight: bold;\n// }\n\n// button {\n// \tborder: none;\n// \tfont-size: 14px;\n// \tbackground-color: #7DF4E1;\n// \tpadding: 1em 2em;\n// \tborder-radius: 4px;\n// \tletter-spacing: .1em;\n// \ttext-transform: uppercase;\n// \tfont-weight: 600;\n// \tcolor: #0F2740;\n// \tcursor: pointer;\n// \ttransition: .25s ease-in-out;\n\n// \t&.secondary {\n// \t\tfont-size: 10px;\n\t\t\n// \t}\n\n// \t&.red {\n// \t\tbackground-color: rgb(251, 116, 116);\n// \t}\n\n// \t&.green {\n// \t\tbackground-color: rgb(141, 254, 133);\n// \t}\n// }\n\n// button.disabled {\n// \tbackground-color: rgb(179, 179, 179);\n// }\n\n// button:not(.disabled):hover {\n// \tbox-shadow: 2.8px 2.8px 2.2px rgba(0, 0, 0, 0.011),\n// \t\t\t\t6.7px 6.7px 5.3px rgba(0, 0, 0, 0.016),\n// \t\t\t\t12.5px 12.5px 10px rgba(0, 0, 0, 0.02),\n// \t\t\t\t22.3px 22.3px 17.9px rgba(0, 0, 0, 0.024),\n// \t\t\t\t41.8px 41.8px 33.4px rgba(0, 0, 0, 0.029),\n// \t\t\t\t100px 100px 80px rgba(0, 0, 0, 0.04);\n// }\n\n// fieldset {\n// \tborder: none;\n// \ttext-align: left;\n// \tmax-width: 500px;\t\n// \tmargin: 0 auto;\n// }\n\n// fieldset:not(:last-of-type) {\n// \tborder-bottom: 1px solid #ccc;\n// \tpadding-bottom: 40px;\n// \tmargin: 0 auto 40px;\n// }\n\n// legend {\n// \ttext-transform: uppercase;\n// \tfont-weight: bold;\n// \tmargin-bottom: 16px;\n// }\n\n// .field {\n// \tfont-size: 20px;\n// \tmargin-bottom: 1em;\n// \twidth: 100%;\n// }\n\n\n\n// .field > * {\n// \tdisplay: block;\n// }\n\n// label {\n// \tfont-size: 1.2rem;\n// \tmargin-bottom: 1.4em;\n// \tdisplay: block;\n\n// \t.label {\n// \t\tfont-size: .85em;\n// \t\tfont-weight: bold;\n// \t\tcolor: #666;\n// \t\tmargin-bottom: 0.5em;\n// \t}\n// \tinput:not([type=\"radio\"]){\n// \t\tfont-size: 1em;\n// \t\twidth: 100%;\n// \t\theight: 2.5em;\n// \t\tpadding: 0 .75em;\n// \t\tborder-radius: 4px;\n// \t\tborder: 1px solid #acacacac;\n// \t\ttransition: .25s ease-in-out;\n// \t}\n// \t&.checkbox {\n// \t\tcursor: pointer;\n// \t\tdisplay: flex;\n// \t\talign-content: center;\n\n// \t\t.label {\n// \t\t\tdisplay: flex;\n// \t\t\talign-items: center;\n// \t\t\tpadding-left: .8em;\n// \t\t\tmargin-bottom: 0;\n// \t\t}\n// \t\tinput {\n// \t\t\theight: 1.4rem;\n// \t\t\twidth: 1.4rem;\n// \t\t}\n// \t}\n\n// \t&.radio-inline {\n// \t\tdisplay: flex;\n// \t\talign-items: center;\n// \t\tmargin-bottom: .8em;\n// \t\tinput {\n// \t\t\tmargin: 0;\n// \t\t}\n// \t\t.label {\n// \t\t\tmargin-bottom: 0;\n// \t\t\tpadding-left: 16px;\n// \t\t}\n// \t}\n\t\n// }\n\n// .checkbox-percentage {\n// \twidth: 100%;\n// \tdisplay: flex;\n// \talign-items: center;\n// \tjustify-content: space-between;\n\n// \t.percentage {\n// \t\tposition: relative;\n// \t\tmax-width: 100px;\t\n// \t\t.label {\n// \t\t\tposition: absolute;\n// \t\t\ttop: 50%;\n// \t\t\tright: 0;\n// \t\t\ttransform: translateY(-50%);\n// \t\t\tpadding-right: 10px;\n// \t\t}\n// \t}\n\t\n// }\n\n\n// // label {\n// // \tfont-size: .85em;\n// // \tfont-weight: bold;\n// // \tcolor: #666;\n// // \tmargin-bottom: 0.5em;\n\n\t\n// // }\n\n\n\n// input:hover {\n// \tborder: 1px solid #7DF4E1;\n// }\n\n// input:focus {\n// \tborder: 1px solid #0F2740;\n// \toutline: none;\n// }\n\n// input::-webkit-outer-spin-button,\n// input::-webkit-inner-spin-button {\n// \t-webkit-appearance: none;\n// \tmargin: 0;\n// }\n\n// /* Firefox */\n// input[type=number] {\n// \t-moz-appearance: textfield;\n// }\n\n// .tac {\n// \ttext-align: center;\n// }\n\n// .ls--wide {\n// \tletter-spacing: .11em;\n// }\n// .fz--large {\n// \tfont-size: 30px;\n// }\n\n// .field-group {\n// \tdisplay: flex;\n// \tjustify-content: space-between;\n// }\n\n// .field-group > label {\n// \twidth: calc(50% - 10px);\n// }\n\n\n</style>\n"]},"metadata":{},"sourceType":"module"}