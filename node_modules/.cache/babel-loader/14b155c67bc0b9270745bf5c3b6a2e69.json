{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"for\"];\nconst _hoisted_2 = [\"id\", \"name\", \"value\"];\nconst _hoisted_3 = [\"textContent\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"label\", {\n    for: $props.id,\n    class: \"text-left block mb-5 flex flex-column items-center\"\n  }, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: $props.id,\n    name: $props.id,\n    value: $props.modelValue,\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.updateInput && $options.updateInput(...args))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_2), _createElementVNode(\"div\", {\n    class: \"text-slate-600 font-base pl-3\",\n    textContent: _toDisplayString($props.label)\n  }, null, 8\n  /* PROPS */\n  , _hoisted_3)], 8\n  /* PROPS */\n  , _hoisted_1);\n}","map":{"version":3,"mappings":";;;;;uBACAA,oBAGQ,OAHR,EAGQ;IAHAC,GAAG,EAAEC,SAGL;IAHSC,KAAK,EAAC;EAGf,CAHR,GACIC,oBAAoF,OAApF,EAAoF;IAA7EC,IAAI,EAAC,UAAwE;IAA5DC,EAAE,EAAEJ,SAAwD;IAAnDK,IAAI,EAAEL,SAA6C;IAAxCM,KAAK,EAAEN,iBAAiC;IAApBO,OAAK,yCAAEC,qDAAF;EAAe,CAApF;;EAAA,eACAN,oBAAgE,KAAhE,EAAgE;IAA3DD,KAAK,EAAC,+BAAqD;iBAArBQ,iBAAQT,MAAM,MAAd;EAAqB,CAAhE;;EAAA,cAFJ;;EAAA","names":["_createElementBlock","for","$props","class","_createElementVNode","type","id","name","value","onInput","$options","_toDisplayString"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/CB/Flywheel2/src/components/BaseCheckbox.vue"],"sourcesContent":["<template> \n<label :for=\"id\" class=\"text-left block mb-5 flex flex-column items-center\">\n    <input type=\"checkbox\" :id=\"id\" :name=\"id\" :value=\"modelValue\" @input=\"updateInput\">\n    <div class=\"text-slate-600 font-base pl-3\" v-text=\"label\"></div>\n</label>\n</template>\n\n<script>\nexport default {\n    name: \"BaseCheckbox\",\n    props: {\n        id: {\n            type: String,\n            default: \"\",\n        },\n        label: {\n            type: String,\n            default: \"\",\n        },\n        modelValue: {\n            type: [String, Number, Boolean],\n            default: \"\",\n        }\n    },\n    methods: {\n        updateInput(event) {\n            console.log(event.target.checked);\n            this.$emit(\"update:modelValue\", event.target.checked);\n            this.$store.commit('updateOwnerIsContact', value)\n        }\n    }\n};\n</script>"]},"metadata":{},"sourceType":"module"}