{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  name: 'TractorVINs',\n\n  data() {\n    return {\n      added_vin: ''\n    };\n  },\n\n  computed: { ...mapState({\n      usdot_data: state => state.usdot_data\n    }),\n    vin_data: {\n      get() {\n        return this.$store.state.vin_data;\n      },\n\n      set(value) {\n        this.$store.commit('updateVinData', value);\n      }\n\n    }\n  },\n  methods: {\n    addVIN() {\n      if (this.added_vin.length > 0) {\n        this.usdot_data.vins.push(this.added_vin);\n        this.added_vin = '';\n        this.$store.commit('updateDOTData', this.usdot_data);\n      }\n    },\n\n    removeVIN(vin) {\n      const vin_index = this.usdot_data.vins.indexOf(vin);\n      vin_index > -1 ? this.usdot_data.vins.splice(vin_index, 1) : false;\n    },\n\n    vinLookup(vin) {\n      // const self = this;\n      const vin_data = {\n        vin: vin,\n        make: String,\n        model: String,\n        year: String\n      };\n      fetch(`https://vpic.nhtsa.dot.gov/api/vehicles/DecodeVin/${vin}?format=json`).then(response => response.json()).then(function (data) {\n        data.Results.forEach(element => {\n          if (element.Variable === 'Make') vin_data.make = element.Value;\n          if (element.Variable === 'Model') vin_data.model = element.Value;\n          if (element.Variable === 'Model Year') vin_data.year = element.Value;\n        });\n      });\n      console.log(vin_data);\n      return vin_data;\n    },\n\n    getAllVinData() {\n      const self = this;\n      this.usdot_data.vins.forEach(function (vin) {\n        self.vinLookup(vin);\n      });\n    }\n\n  },\n\n  mounted() {\n    this.getAllVinData();\n  }\n\n};","map":{"version":3,"mappings":"AAsBA,SAASA,QAAT,QAAyB,MAAzB;AAEA,eAAe;EACdC,IAAI,EAAE,aADQ;;EAEdC,IAAI,GAAE;IACL,OAAO;MACNC,SAAS,EAAE;IADL,CAAP;EAGA,CANa;;EAOdC,QAAQ,EAAE,EACT,GAAGJ,QAAQ,CAAC;MACXK,UAAU,EAAEC,KAAI,IAAKA,KAAK,CAACD;IADhB,CAAD,CADF;IAITE,QAAQ,EAAE;MACTC,GAAG,GAAE;QACJ,OAAO,KAAKC,MAAL,CAAYH,KAAZ,CAAkBC,QAAzB;MACA,CAHQ;;MAITG,GAAG,CAACC,KAAD,EAAO;QACT,KAAKF,MAAL,CAAYG,MAAZ,CAAmB,eAAnB,EAAoCD,KAApC;MACD;;IANS;EAJD,CAPI;EAoBdE,OAAO,EAAE;IACRC,MAAM,GAAE;MACP,IAAG,KAAKX,SAAL,CAAeY,MAAf,GAAwB,CAA3B,EAA8B;QAC7B,KAAKV,UAAL,CAAgBW,IAAhB,CAAqBC,IAArB,CAA0B,KAAKd,SAA/B;QACA,KAAKA,SAAL,GAAiB,EAAjB;QACA,KAAKM,MAAL,CAAYG,MAAZ,CAAmB,eAAnB,EAAoC,KAAKP,UAAzC;MACD;IACA,CAPO;;IAQRa,SAAS,CAACC,GAAD,EAAM;MACd,MAAMC,SAAQ,GAAK,KAAKf,UAAL,CAAgBW,IAAhB,CAAqBK,OAArB,CAA6BF,GAA7B,CAAnB;MACAC,SAAQ,GAAI,CAAC,CAAb,GAAiB,KAAKf,UAAL,CAAgBW,IAAhB,CAAqBM,MAArB,CAA4BF,SAA5B,EAAuC,CAAvC,CAAjB,GAA6D,KAA7D;IACA,CAXO;;IAYRG,SAAS,CAACJ,GAAD,EAAK;MACb;MACA,MAAMZ,QAAO,GAAI;QAChBY,GAAG,EAAEA,GADW;QAEhBK,IAAI,EAAEC,MAFU;QAGhBC,KAAK,EAAED,MAHS;QAIhBE,IAAI,EAAEF;MAJU,CAAjB;MAMAG,KAAK,CAAE,qDAAoDT,GAAI,cAA1D,CAAL,CACCU,IADD,CACMC,QAAO,IAAKA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEM,UAAS3B,IAAT,EAAc;QACnBA,IAAI,CAAC8B,OAAL,CAAaC,OAAb,CAAqBC,OAAM,IAAK;UAC/B,IAAGA,OAAO,CAACC,QAAR,KAAqB,MAAxB,EAAgC5B,QAAQ,CAACiB,IAAT,GAAgBU,OAAO,CAACE,KAAxB;UAChC,IAAGF,OAAO,CAACC,QAAR,KAAqB,OAAxB,EAAiC5B,QAAQ,CAACmB,KAAT,GAAiBQ,OAAO,CAACE,KAAzB;UACjC,IAAGF,OAAO,CAACC,QAAR,KAAqB,YAAxB,EAAsC5B,QAAQ,CAACoB,IAAT,GAAgBO,OAAO,CAACE,KAAxB;QACtC,CAJD;MAKA,CARD;MASAC,OAAO,CAACC,GAAR,CAAY/B,QAAZ;MACA,OAAOA,QAAP;IACA,CA/BO;;IAgCRgC,aAAa,GAAE;MACd,MAAMC,IAAG,GAAI,IAAb;MACA,KAAKnC,UAAL,CAAgBW,IAAhB,CAAqBiB,OAArB,CAA6B,UAASd,GAAT,EAAa;QACzCqB,IAAI,CAACjB,SAAL,CAAeJ,GAAf;MACA,CAFD;IAGD;;EArCQ,CApBK;;EA2DdsB,OAAO,GAAE;IACR,KAAKF,aAAL;EACD;;AA7Dc,CAAf","names":["mapState","name","data","added_vin","computed","usdot_data","state","vin_data","get","$store","set","value","commit","methods","addVIN","length","vins","push","removeVIN","vin","vin_index","indexOf","splice","vinLookup","make","String","model","year","fetch","then","response","json","Results","forEach","element","Variable","Value","console","log","getAllVinData","self","mounted"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/CB/Flywheel/src/views/TractorVINs.vue"],"sourcesContent":["<template>\n\t<Transition appear>\n\t\t<div class=\"tw-card\">\n\t\t\t<h1 class=\"tw-heading\">Tractor VINS</h1>\n\t\t\t<div class=\"max-w-sm m-auto text-left\">\n\t\t\t\t<div class=\"pb-9\">\n\t\t\t\t\t<div class=\"p-4 flex justify-between border-b border-slate-300\" v-for=\"vin in usdot_data.vins\" :key=\"vin\">\n\t\t\t\t\t\t<div class=\"text-lg tracking-wider\">{{vin}}</div>\n\t\t\t\t\t\t<button class=\"bg-red-400 rounded pl-4 pr-4 pt-2 pb-1 text-xs font-medium uppercase text-white\" @click=\"removeVIN(vin)\">Remove</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<label for=\"add_vin\" class=\"mt-4 text-left flex items-center pl-4 pr-4\">\n\t\t\t\t\t\t<input type=\"text\" name=\"add_vin\" id=\"add_vin\" class=\"mr-4\" v-model=\"added_vin\">\n\t\t\t\t\t\t<button class=\"bg-green-400 rounded uppercase text-sm text-white pl-4 pr-4 pt-2 pb-1 whitespace-nowrap\" @click=\"addVIN()\">Add VIN</button>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<button type=\"button\" class=\"tw-btn mt-5 block m-auto\" @click=\"$router.push({name: 'selectPlan'})\">Next</button>\n\t\t\t</div>\n\t\t</div>\n\t</Transition>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\n\nexport default {\n\tname: 'TractorVINs',\n\tdata(){\n\t\treturn {\n\t\t\tadded_vin: ''\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapState({\n\t\t\tusdot_data: state => state.usdot_data\n\t\t}),\n\t\tvin_data: {\n\t\t\tget(){\n\t\t\t\treturn this.$store.state.vin_data;\n\t\t\t},\n\t\t\tset(value){\n\t\t\t\tthis.$store.commit('updateVinData', value);\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\taddVIN(){\n\t\t\tif(this.added_vin.length > 0) {\n\t\t\t\tthis.usdot_data.vins.push(this.added_vin);\n\t\t\t\tthis.added_vin = '';\n\t\t\t\tthis.$store.commit('updateDOTData', this.usdot_data);\n\t\t\t}\t\t\t\t\n\t\t},\n\t\tremoveVIN(vin) {\n\t\t\tconst vin_index =  this.usdot_data.vins.indexOf(vin);\n\t\t\tvin_index > -1 ? this.usdot_data.vins.splice(vin_index, 1) : false;\n\t\t},\n\t\tvinLookup(vin){\n\t\t\t// const self = this;\n\t\t\tconst vin_data = {\n\t\t\t\tvin: vin,\n\t\t\t\tmake: String,\n\t\t\t\tmodel: String,\n\t\t\t\tyear: String\n\t\t\t}\n\t\t\tfetch(`https://vpic.nhtsa.dot.gov/api/vehicles/DecodeVin/${vin}?format=json`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(function(data){\n\t\t\t\tdata.Results.forEach(element => {\n\t\t\t\t\tif(element.Variable === 'Make') vin_data.make = element.Value;\n\t\t\t\t\tif(element.Variable === 'Model') vin_data.model = element.Value;\n\t\t\t\t\tif(element.Variable === 'Model Year') vin_data.year = element.Value;\n\t\t\t\t});\n\t\t\t});\n\t\t\tconsole.log(vin_data);\n\t\t\treturn vin_data;\n\t\t}, \n\t\tgetAllVinData(){\n\t\t\tconst self = this;\n\t\t\tthis.usdot_data.vins.forEach(function(vin){\n\t\t\t\tself.vinLookup(vin);\n\t\t\t});\n\t\t}\n\t},\n\tmounted(){\n\t\tthis.getAllVinData();\n\t}\n}\n</script>\n\n<style lang=\"scss\">\n\n</style>"]},"metadata":{},"sourceType":"module"}