{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  name: 'EnterDOT',\n\n  data() {\n    return {\n      dot_info: {}\n    };\n  },\n\n  computed: { ...mapState({\n      usdot: state => state.usdot\n    }),\n    usdot: {\n      get() {\n        return this.$store.usdot;\n      },\n\n      set(value) {\n        console.log(value);\n        this.$store.commit('updateDOT', value);\n      }\n\n    }\n  },\n  methods: {\n    async validateDOT() {\n      const response = await fetch('../assets/data/DOTValidation.json');\n      console.log(response); // const { data: dot_info } = await response.json();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAYA,SAASA,QAAT,QAAyB,MAAzB;AACA,eAAe;EACdC,IAAI,EAAE,UADQ;;EAEdC,IAAI,GAAG;IACN,OAAO;MACNC,QAAQ,EAAE;IADJ,CAAP;EAGA,CANa;;EAOdC,QAAQ,EAAE,EACT,GAAGJ,QAAQ,CAAC;MACXK,KAAK,EAAEC,KAAI,IAAKA,KAAK,CAACD;IADX,CAAD,CADF;IAITA,KAAK,EAAE;MACNE,GAAG,GAAG;QACL,OAAO,KAAKC,MAAL,CAAYH,KAAnB;MACA,CAHK;;MAINI,GAAG,CAACC,KAAD,EAAQ;QACVC,OAAO,CAACC,GAAR,CAAYF,KAAZ;QACA,KAAKF,MAAL,CAAYK,MAAZ,CAAmB,WAAnB,EAAgCH,KAAhC;MACD;;IAPM;EAJE,CAPI;EAqBdI,OAAO,EAAE;IACR,MAAMC,WAAN,GAAqB;MACpB,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,mCAAD,CAA5B;MACAN,OAAO,CAACC,GAAR,CAAYI,QAAZ,EAFoB,CAGpB;IAED;;EANQ;AArBK,CAAf","names":["mapState","name","data","dot_info","computed","usdot","state","get","$store","set","value","console","log","commit","methods","validateDOT","response","fetch"],"sourceRoot":"","sources":["/Users/luke/Desktop/CB/lemonade/src/views/EnterDOT.vue"],"sourcesContent":["<template>\n\t<div class=\"enter-dot\">\n\t\t<h1>Enter DOT</h1>\n\t\t<div class=\"field\">\n\t\t\t<label for=\"usdot\">USDOT:</label>\n\t\t\t<input type=\"text\" id=\"usdot\" v-model=\"usdot\">\n\t\t</div>\n\t\t<router-link :to=\"{name: 'verifyDOTLink'}\">Verify DOT</router-link>\n\t</div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nexport default {\n\tname: 'EnterDOT',\n\tdata() {\n\t\treturn {\n\t\t\tdot_info: {}\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapState({\n\t\t\tusdot: state => state.usdot\n\t\t}),\n\t\tusdot: {\n\t\t\tget() {\n\t\t\t\treturn this.$store.usdot;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tconsole.log(value);\n\t\t\t\tthis.$store.commit('updateDOT', value);\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tasync validateDOT () {\n\t\t\tconst response = await fetch('../assets/data/DOTValidation.json');\n\t\t\tconsole.log(response);\n\t\t\t// const { data: dot_info } = await response.json();\n\t\t\t\n\t\t}\n\t}\n}\n</script>"]},"metadata":{},"sourceType":"module"}