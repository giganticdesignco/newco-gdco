{"ast":null,"code":"import { mapState } from 'vuex';\nimport BaseInput from \"@/components/BaseInput.vue\";\nexport default {\n  name: 'VerifyDOT',\n  components: {\n    BaseInput\n  },\n  computed: { ...mapState({\n      usdot_data: state => state.usdot_data\n    }),\n    usdot_data: {\n      get() {\n        return this.$store.state.usdot_data;\n      },\n\n      set(value) {\n        this.$store.commit('updateDOTData', value);\n      }\n\n    },\n    route_index: {\n      get() {\n        return this.$store.state.curr_route_index;\n      },\n\n      set(value) {\n        this.$store.commit('updateRouteIndex', value);\n      }\n\n    }\n  },\n  methods: {\n    verifyDOTData() {\n      // Temporary flag to determine elgibility.\n      if (this.usdot_data.totalPowerUnits > 10) {\n        this.$router.push({\n          name: 'notEligible'\n        });\n      } else {\n        this.$router.push({\n          name: 'ownerDetails'\n        });\n      }\n    },\n\n    setRoutes() {\n      const self = this;\n      const routes = this.$router.getRoutes();\n      let route_index = 0;\n      this.curr_route = this.$router.currentRoute.value;\n      routes.forEach(function (route, index) {\n        if (route.name === self.curr_route.name) {\n          route_index = index;\n        }\n      });\n      this.route_index = route_index;\n    }\n\n  },\n\n  mounted() {\n    this.setRoutes();\n  }\n\n};","map":{"version":3,"mappings":"AA4BA,SAASA,QAAT,QAAyB,MAAzB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,eAAe;EACdC,IAAI,EAAE,WADQ;EAEdC,UAAU,EAAE;IACXF;EADW,CAFE;EAKdG,QAAQ,EAAE,EACT,GAAGJ,QAAQ,CAAC;MACXK,UAAU,EAAEC,KAAI,IAAKA,KAAK,CAACD;IADhB,CAAD,CADF;IAITA,UAAU,EAAE;MACXE,GAAG,GAAE;QACJ,OAAO,KAAKC,MAAL,CAAYF,KAAZ,CAAkBD,UAAzB;MACA,CAHU;;MAIXI,GAAG,CAACC,KAAD,EAAQ;QACV,KAAKF,MAAL,CAAYG,MAAZ,CAAmB,eAAnB,EAAoCD,KAApC;MACD;;IANW,CAJH;IAYTE,WAAW,EAAE;MACZL,GAAG,GAAG;QACL,OAAO,KAAKC,MAAL,CAAYF,KAAZ,CAAkBO,gBAAzB;MACA,CAHW;;MAIZJ,GAAG,CAACC,KAAD,EAAQ;QACV,KAAKF,MAAL,CAAYG,MAAZ,CAAmB,kBAAnB,EAAuCD,KAAvC;MACD;;IANY;EAZJ,CALI;EA0BdI,OAAO,EAAE;IACRC,aAAa,GAAG;MACf;MACA,IAAG,KAAKV,UAAL,CAAgBW,eAAhB,GAAkC,EAArC,EAAyC;QACxC,KAAKC,OAAL,CAAaC,IAAb,CAAkB;UAAChB,IAAI,EAAE;QAAP,CAAlB;MACD,CAFA,MAEO;QACN,KAAKe,OAAL,CAAaC,IAAb,CAAkB;UAAChB,IAAI,EAAE;QAAP,CAAlB;MACD;IACA,CARO;;IASRiB,SAAS,GAAG;MACX,MAAMC,IAAG,GAAI,IAAb;MACA,MAAMC,MAAK,GAAI,KAAKJ,OAAL,CAAaK,SAAb,EAAf;MACA,IAAIV,WAAU,GAAI,CAAlB;MAEA,KAAKW,UAAL,GAAkB,KAAKN,OAAL,CAAaO,YAAb,CAA0Bd,KAA5C;MAEAW,MAAM,CAACI,OAAP,CAAe,UAASC,KAAT,EAAgBC,KAAhB,EAAsB;QACpC,IAAGD,KAAK,CAACxB,IAAN,KAAekB,IAAI,CAACG,UAAL,CAAgBrB,IAAlC,EAAwC;UACvCU,WAAU,GAAIe,KAAd;QACD;MACA,CAJD;MAMA,KAAKf,WAAL,GAAmBA,WAAnB;IACD;;EAvBQ,CA1BK;;EAmDdgB,OAAO,GAAE;IACR,KAAKT,SAAL;EACD;;AArDc,CAAf","names":["mapState","BaseInput","name","components","computed","usdot_data","state","get","$store","set","value","commit","route_index","curr_route_index","methods","verifyDOTData","totalPowerUnits","$router","push","setRoutes","self","routes","getRoutes","curr_route","currentRoute","forEach","route","index","mounted"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/CB/Flywheel/src/views/VerifyDOT.vue"],"sourcesContent":["<template>\n<Transition appear>\n\t<div class=\"tw-card\">\n\t\t<h1 class=\"tw-heading\">Verify DOT Information</h1>\n\t\t<div class=\"max-w-sm m-auto text-left\">\n\t\t\t<fieldset>\n\t\t\t\t<legend>Company Details</legend>\n\t\t\t\t<BaseInput type=\"text\" id=\"company_name\" label=\"Company Name\" v-model=\"usdot_data.legalName\" />\n\t\t\t\t<BaseInput type=\"text\" id=\"address_street\" label=\"Address\" v-model=\"usdot_data.phyStreet\" />\n\t\t\t\t<BaseInput type=\"text\" id=\"address_city\" label=\"City\" v-model=\"usdot_data.phyCity\" />\n\t\t\t\t<div class=\"field-group\">\n\t\t\t\t\t<BaseInput type=\"text\" id=\"address_state\" label=\"State\" v-model=\"usdot_data.phyState\" />\n\t\t\t\t\t<BaseInput type=\"text\" id=\"address_zip\" label=\"Zip Code\" v-model=\"usdot_data.phyZipcode\" />\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\n\t\t\t<fieldset>\n\t\t\t\t<legend>Equipment Details</legend>\n\t\t\t\t<BaseInput type=\"text\" id=\"total_power_units\" label=\"Total Power Units\" v-model=\"usdot_data.totalPowerUnits\" />\n\t\t\t</fieldset>\n\n\t\t\t<button type=\"button\" class=\"tw-btn mt-7 m-auto block\" @click=\"verifyDOTData()\">Verify</button>\n\t\t</div>\n\t</div>\n</Transition>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport BaseInput from \"@/components/BaseInput.vue\";\n\nexport default {\n\tname: 'VerifyDOT',\n\tcomponents: {\n\t\tBaseInput\n\t},\n\tcomputed: {\n\t\t...mapState({\n\t\t\tusdot_data: state => state.usdot_data\n\t\t}),\n\t\tusdot_data: {\n\t\t\tget(){\n\t\t\t\treturn this.$store.state.usdot_data;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$store.commit('updateDOTData', value);\n\t\t\t}\n\t\t},\n\t\troute_index: {\n\t\t\tget() {\n\t\t\t\treturn this.$store.state.curr_route_index;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$store.commit('updateRouteIndex', value);\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tverifyDOTData() {\n\t\t\t// Temporary flag to determine elgibility.\n\t\t\tif(this.usdot_data.totalPowerUnits > 10) {\n\t\t\t\tthis.$router.push({name: 'notEligible'});\n\t\t\t} else {\n\t\t\t\tthis.$router.push({name: 'ownerDetails'});\n\t\t\t}\t\t\t\n\t\t},\n\t\tsetRoutes() {\n\t\t\tconst self = this;\n\t\t\tconst routes = this.$router.getRoutes();\n\t\t\tlet route_index = 0;\n\n\t\t\tthis.curr_route = this.$router.currentRoute.value;\n\t\t\t\t\n\t\t\troutes.forEach(function(route, index){\n\t\t\t\tif(route.name === self.curr_route.name) {\n\t\t\t\t\troute_index = index;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.route_index = route_index;\n\t\t}\n\t},\n\tmounted(){\n\t\tthis.setRoutes();\n\t}\n}\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module"}