{"ast":null,"code":"export default {\n  name: 'ChoosePayment',\n  methods: {\n    createOrder: async () => {\n      // eslint-disable-line no-undef, no-unused-vars\n      if (typeof _0x5b90c7 === 'undefined') {\n        // Fetching the data from  your server\n        const title = `Title-${new Date().toUTCString()}`;\n        await fetch(\"http://localhost:4242/create-payment-intent\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            amount: 1.00,\n            title: title,\n            shortDescription: \"shortDescription\",\n            paymentDescription: \"paymentDescription\",\n            invoiceNumber: \"invoiceNumber-005\",\n            expiresIn: \"3000\",\n            intent: {\n              paymentTypes: [\"DebitCard\", \"CreditCard\", \"ACH\"]\n            }\n          })\n        }).then(res => res.json()).then(res => {\n          let pluginOption = {\n            theme: \"classic\",\n            // classic, modern, minimal, vibrant\n            container: \"mywidget\" // id of the div to render the widget\n\n          }; //Assigning the payment token received from your server\n\n          let paymentIntentToken = res.paymentIntentToken; // Initialize the plugin with token and options\n          // eslint-disable-next-line no-undef\n\n          let andDone = new AndDone(paymentIntentToken, pluginOption); // Using onload function to perform some action after the widget is loaded  and ready\n          // eslint-disable-next-line no-unused-vars\n\n          andDone.onload = plugin => {\n            console.log(\"Widget loaded successfully\");\n          };\n        });\n      }\n    }\n  },\n\n  mounted() {\n    console.log('Payment Mounted');\n    this.createOrder();\n  }\n\n};","map":{"version":3,"mappings":"AAcC,eAAe;EACdA,IAAI,EAAE,eADQ;EAEdC,OAAO,EAAE;IACRC,WAAW,EAAE,YAAY;MAAE;MAC1B,IAAG,OAAOC,SAAP,KAAqB,WAAxB,EAAqC;QACrC;QACA,MAAMC,KAAI,GAAK,SAAS,IAAIC,IAAJ,GAAWC,WAAX,EAA0B,EAAlD;QACA,MAAMC,KAAK,CAAC,6CAAD,EAAgD;UAC1DC,MAAM,EAAE,MADkD;UAE1DC,OAAO,EAAE;YAAC,gBAAgB;UAAjB,CAFiD;UAG1DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YACpBC,MAAM,EAAE,IADY;YAEpBT,KAAK,EAAEA,KAFa;YAGpBU,gBAAgB,EAAE,kBAHE;YAIpBC,kBAAkB,EAAE,oBAJA;YAKpBC,aAAa,EAAE,mBALK;YAMpBC,SAAS,EAAE,MANS;YAOpBC,MAAM,EAAE;cACPC,YAAY,EAAE,CACb,WADa,EAEb,YAFa,EAGb,KAHa;YADP;UAPY,CAAf;QAHoD,CAAhD,CAAL,CAkBHC,IAlBG,CAkBEC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EAlBR,EAkBoBF,IAlBpB,CAkB0BC,GAAD,IAAS;UACvC,IAAIE,YAAW,GAAG;YACjBC,KAAI,EAAI,SADS;YACG;YACpBC,SAAS,EAAE,UAFM,CAEO;;UAFP,CAAlB,CADuC,CAMvC;;UACA,IAAIC,kBAAkB,GAACL,GAAG,CAACK,kBAA3B,CAPuC,CAQvC;UAEA;;UACA,IAAIC,OAAM,GAAI,IAAIC,OAAJ,CAAYF,kBAAZ,EAAgCH,YAAhC,CAAd,CAXuC,CAavC;UACA;;UACAI,OAAO,CAACE,MAAR,GAAkBC,MAAD,IACjB;YACCC,OAAO,CAACC,GAAR,CAAY,4BAAZ;UACD,CAHA;QAIA,CArCK,CAAN;MAsCD;IACA;EA5CQ,CAFK;;EAgDdC,OAAO,GAAE;IACRF,OAAO,CAACC,GAAR,CAAY,iBAAZ;IACA,KAAK9B,WAAL;EACD;;AAnDc,CAAf","names":["name","methods","createOrder","_0x5b90c7","title","Date","toUTCString","fetch","method","headers","body","JSON","stringify","amount","shortDescription","paymentDescription","invoiceNumber","expiresIn","intent","paymentTypes","then","res","json","pluginOption","theme","container","paymentIntentToken","andDone","AndDone","onload","plugin","console","log","mounted"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/CB/Flywheel/src/views/ChoosePayment.vue"],"sourcesContent":["<template>\n\t<Transition appear>\n\t\t<keep-alive>\n\t\t<div class=\"questionset card\">\n\t\t\t<h1 class=\"tw-heading text-center\">Payment</h1>\n\t\t\t<div class=\"content\">\n\t\t\t\t<div id=\"mywidget\"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t</keep-alive>\n\t</Transition>\n</template>\n\n<script>\n\texport default {\n\t\tname: 'ChoosePayment',\n\t\tmethods: {\n\t\t\tcreateOrder: async () => { // eslint-disable-line no-undef, no-unused-vars\n\t\t\t\tif(typeof _0x5b90c7 === 'undefined') {\n\t\t\t\t// Fetching the data from  your server\n\t\t\t\tconst title = `Title-${ new Date().toUTCString() }`;\n\t\t\t\tawait fetch(\"http://localhost:4242/create-payment-intent\", {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tamount: 1.00,\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tshortDescription: \"shortDescription\",\n\t\t\t\t\t\tpaymentDescription: \"paymentDescription\",\n\t\t\t\t\t\tinvoiceNumber: \"invoiceNumber-005\",\n\t\t\t\t\t\texpiresIn: \"3000\",\n\t\t\t\t\t\tintent: { \n\t\t\t\t\t\t\tpaymentTypes: [\n\t\t\t\t\t\t\t\t\"DebitCard\",\n\t\t\t\t\t\t\t\t\"CreditCard\",\n\t\t\t\t\t\t\t\t\"ACH\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t}).then(res=> res.json()).then((res) => {\n\t\t\t\t\tlet pluginOption ={\n\t\t\t\t\t\ttheme : \"classic\",  // classic, modern, minimal, vibrant\n\t\t\t\t\t\tcontainer: \"mywidget\",  // id of the div to render the widget\n\t\t\t\t\t}\n\n\t\t\t\t\t//Assigning the payment token received from your server\n\t\t\t\t\tlet paymentIntentToken=res.paymentIntentToken;\n\t\t\t\t\t// Initialize the plugin with token and options\n\n\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\tlet andDone = new AndDone(paymentIntentToken, pluginOption); \n\n\t\t\t\t\t// Using onload function to perform some action after the widget is loaded  and ready\n\t\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\t\tandDone.onload = (plugin) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"Widget loaded successfully\");\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmounted(){\n\t\t\tconsole.log('Payment Mounted')\n\t\t\tthis.createOrder();\n\t\t}\n\t}\n</script>"]},"metadata":{},"sourceType":"module"}