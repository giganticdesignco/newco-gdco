{"ast":null,"code":"import { mapState } from 'vuex';\nimport BaseInput from \"@/components/BaseInput.vue\";\nimport BaseCheckbox from '@/components/BaseCheckbox.vue';\nexport default {\n  name: 'OwnerDetails',\n  components: {\n    BaseInput,\n    BaseCheckbox\n  },\n  computed: { ...mapState({\n      usdot_data: state => state.usdot_data,\n      owner_is_contact: state => state.owner_is_contact\n    }),\n    owner_is_contact: {\n      get() {\n        return this.$store.state.owner_is_contact;\n      },\n\n      set(value) {\n        this.$store.commit('updateOwnerIsContact', value);\n      }\n\n    },\n    route_index: {\n      get() {\n        return this.$store.state.curr_route_index;\n      },\n\n      set(value) {\n        this.$store.commit('updateRouteIndex', value);\n      }\n\n    }\n  },\n  methods: {\n    nextSection() {\n      if (this.owner_is_contact) {\n        this.usdot_data.contactFirstName = this.usdot_data.ownerFirstName;\n        this.usdot_data.contactLastName = this.usdot_data.ownerLastName;\n        this.usdot_data.contactPhone = this.usdot_data.ownerPhone;\n        this.usdot_data.contactEmail = this.usdot_data.ownerEmail;\n      } else {\n        this.usdot_data.contactFirstName = \"\";\n        this.usdot_data.contactLastName = \"\";\n        this.usdot_data.contactPhone = \"\";\n        this.usdot_data.contactEmail = \"\";\n      }\n\n      this.$store.commit('updateDOTData', this.usdot_data);\n      this.owner_is_contact ? this.$router.push({\n        name: 'insuranceEffectiveDate'\n      }) : this.$router.push({\n        name: 'contactDetails'\n      });\n    }\n\n  },\n\n  mounted() {\n    const self = this;\n    const routes = this.$router.getRoutes();\n    let route_index = 0;\n    this.curr_route = this.$router.currentRoute.value;\n    routes.forEach(function (route, index) {\n      if (route.name === self.curr_route.name) {\n        route_index = index;\n      }\n    });\n    this.route_index = route_index;\n  }\n\n};","map":{"version":3,"mappings":"AAwBA,SAASA,QAAT,QAAyB,MAAzB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,eAAe;EACdC,IAAI,EAAE,cADQ;EAEdC,UAAU,EAAE;IACXH,SADW;IAEXC;EAFW,CAFE;EAMdG,QAAQ,EAAE,EACT,GAAGL,QAAQ,CAAC;MACXM,UAAU,EAAEC,KAAI,IAAKA,KAAK,CAACD,UADhB;MAEFE,gBAAgB,EAAED,KAAI,IAAKA,KAAK,CAACC;IAF/B,CAAD,CADF;IAKTA,gBAAgB,EAAE;MACjBC,GAAG,GAAG;QACL,OAAQ,KAAKC,MAAL,CAAYH,KAAZ,CAAkBC,gBAA1B;MACA,CAHgB;;MAIjBG,GAAG,CAACC,KAAD,EAAQ;QACV,KAAKF,MAAL,CAAYG,MAAZ,CAAmB,sBAAnB,EAA2CD,KAA3C;MACD;;IANiB,CALT;IAaTE,WAAW,EAAE;MACZL,GAAG,GAAG;QACL,OAAO,KAAKC,MAAL,CAAYH,KAAZ,CAAkBQ,gBAAzB;MACA,CAHW;;MAIZJ,GAAG,CAACC,KAAD,EAAQ;QACV,KAAKF,MAAL,CAAYG,MAAZ,CAAmB,kBAAnB,EAAuCD,KAAvC;MACD;;IANY;EAbJ,CANI;EA4BdI,OAAO,EAAE;IACRC,WAAW,GAAG;MACb,IAAG,KAAKT,gBAAR,EAA0B;QACzB,KAAKF,UAAL,CAAgBY,gBAAhB,GAAmC,KAAKZ,UAAL,CAAgBa,cAAnD;QACA,KAAKb,UAAL,CAAgBc,eAAhB,GAAkC,KAAKd,UAAL,CAAgBe,aAAlD;QACA,KAAKf,UAAL,CAAgBgB,YAAhB,GAA+B,KAAKhB,UAAL,CAAgBiB,UAA/C;QACA,KAAKjB,UAAL,CAAgBkB,YAAhB,GAA+B,KAAKlB,UAAL,CAAgBmB,UAA/C;MACD,CALA,MAKO;QACN,KAAKnB,UAAL,CAAgBY,gBAAhB,GAAmC,EAAnC;QACA,KAAKZ,UAAL,CAAgBc,eAAhB,GAAkC,EAAlC;QACA,KAAKd,UAAL,CAAgBgB,YAAhB,GAA+B,EAA/B;QACA,KAAKhB,UAAL,CAAgBkB,YAAhB,GAA+B,EAA/B;MACD;;MACA,KAAKd,MAAL,CAAYG,MAAZ,CAAmB,eAAnB,EAAoC,KAAKP,UAAzC;MACA,KAAKE,gBAAL,GAAwB,KAAKkB,OAAL,CAAaC,IAAb,CAAkB;QAACxB,IAAI,EAAE;MAAP,CAAlB,CAAxB,GAA8E,KAAKuB,OAAL,CAAaC,IAAb,CAAkB;QAACxB,IAAI,EAAE;MAAP,CAAlB,CAA9E;IACD;;EAfQ,CA5BK;;EA6CdyB,OAAO,GAAG;IACT,MAAMC,IAAG,GAAI,IAAb;IACA,MAAMC,MAAK,GAAI,KAAKJ,OAAL,CAAaK,SAAb,EAAf;IACA,IAAIjB,WAAU,GAAI,CAAlB;IAEA,KAAKkB,UAAL,GAAkB,KAAKN,OAAL,CAAaO,YAAb,CAA0BrB,KAA5C;IAEAkB,MAAM,CAACI,OAAP,CAAe,UAASC,KAAT,EAAgBC,KAAhB,EAAsB;MACpC,IAAGD,KAAK,CAAChC,IAAN,KAAe0B,IAAI,CAACG,UAAL,CAAgB7B,IAAlC,EAAwC;QACvCW,WAAU,GAAIsB,KAAd;MACD;IACA,CAJD;IAMA,KAAKtB,WAAL,GAAmBA,WAAnB;EACD;;AA3Dc,CAAf","names":["mapState","BaseInput","BaseCheckbox","name","components","computed","usdot_data","state","owner_is_contact","get","$store","set","value","commit","route_index","curr_route_index","methods","nextSection","contactFirstName","ownerFirstName","contactLastName","ownerLastName","contactPhone","ownerPhone","contactEmail","ownerEmail","$router","push","mounted","self","routes","getRoutes","curr_route","currentRoute","forEach","route","index"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/CB/Flywheel/src/views/OwnerDetails.vue"],"sourcesContent":["<template>\n<Transition appear>\n\t<div class=\"tw-card\">\n\t\t<h1 class=\"tw-heading\">Owner Details</h1>\n\t\t<div class=\"max-w-sm m-auto text-left\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"field-group\">\n\t\t\t\t\t<BaseInput type=\"text\" id=\"owner_first_name\" label=\"First Name\" v-model=\"usdot_data.ownerFirstName\" />\n\t\t\t\t\t<BaseInput type=\"text\" id=\"owner_last_name\" label=\"Last Name\" v-model=\"usdot_data.ownerLastName\" />\n\t\t\t\t</div>\n\t\t\t\t<BaseInput type=\"text\" id=\"owner_phone\" label=\"Phone\" v-model=\"usdot_data.ownerPhone\" />\n\t\t\t\t<BaseInput type=\"email\" id=\"owner_email\" label=\"Email\" v-model=\"usdot_data.ownerEmail\" />\n\n\t\t\t\t<BaseCheckbox id=\"owner_is_contact\" label=\"Owner is primary contact\" v-model=\"owner_is_contact\" />\n\t\t\t\t\n            </fieldset>\n\n\t\t\t<button type=\"button\" class=\"tw-btn mt-5 block m-auto\" @click=\"nextSection()\">Next</button>\n\t\t</div>\n\t</div>\n</Transition>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport BaseInput from \"@/components/BaseInput.vue\";\nimport BaseCheckbox from '@/components/BaseCheckbox.vue';\n\nexport default {\n\tname: 'OwnerDetails',\n\tcomponents: {\n\t\tBaseInput,\n\t\tBaseCheckbox\n\t},\n\tcomputed: {\n\t\t...mapState({\n\t\t\tusdot_data: state => state.usdot_data,\n            owner_is_contact: state => state.owner_is_contact\n\t\t}),\n\t\towner_is_contact: {\n\t\t\tget() {\n\t\t\t\treturn \tthis.$store.state.owner_is_contact;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$store.commit('updateOwnerIsContact', value);\n\t\t\t}\n\t\t},\n\t\troute_index: {\n\t\t\tget() {\n\t\t\t\treturn this.$store.state.curr_route_index;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$store.commit('updateRouteIndex', value);\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tnextSection() {\n\t\t\tif(this.owner_is_contact) {\n\t\t\t\tthis.usdot_data.contactFirstName = this.usdot_data.ownerFirstName;\n\t\t\t\tthis.usdot_data.contactLastName = this.usdot_data.ownerLastName;\n\t\t\t\tthis.usdot_data.contactPhone = this.usdot_data.ownerPhone;\n\t\t\t\tthis.usdot_data.contactEmail = this.usdot_data.ownerEmail;\n\t\t\t} else {\n\t\t\t\tthis.usdot_data.contactFirstName = \"\";\n\t\t\t\tthis.usdot_data.contactLastName = \"\";\n\t\t\t\tthis.usdot_data.contactPhone = \"\";\n\t\t\t\tthis.usdot_data.contactEmail = \"\";\n\t\t\t}\n\t\t\tthis.$store.commit('updateDOTData', this.usdot_data);\n\t\t\tthis.owner_is_contact ? this.$router.push({name: 'insuranceEffectiveDate'}) : this.$router.push({name: 'contactDetails'});\n\t\t}\n\t},\n\tmounted() {\n\t\tconst self = this;\n\t\tconst routes = this.$router.getRoutes();\n\t\tlet route_index = 0;\n\n\t\tthis.curr_route = this.$router.currentRoute.value;\n\t\t\t\n\t\troutes.forEach(function(route, index){\n\t\t\tif(route.name === self.curr_route.name) {\n\t\t\t\troute_index = index;\n\t\t\t}\n\t\t});\n\n\t\tthis.route_index = route_index;\n\t}\n}\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module"}