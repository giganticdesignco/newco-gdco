{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  name: 'TractorVINs',\n\n  data() {\n    return {\n      added_vin: ''\n    };\n  },\n\n  computed: { ...mapState({\n      usdot_data: state => state.usdot_data\n    }),\n    vin_data: {\n      get() {\n        return this.$store.state.vin_data;\n      },\n\n      set(value) {\n        this.$store.commit('updateVinData', value);\n      }\n\n    },\n    route_index: {\n      get() {\n        return this.$store.state.curr_route_index;\n      },\n\n      set(value) {\n        this.$store.commit('updateRouteIndex', value);\n      }\n\n    }\n  },\n  methods: {\n    addVIN() {\n      if (this.added_vin.length > 0 && !this.vinIsDuplicate(this.added_vin) && this.vinIsValid(this.added_vin)) {\n        this.vinLookup(this.added_vin);\n        this.added_vin = '';\n      }\n    },\n\n    vinIsDuplicate(vin) {\n      const matches = this.vin_data.filter(vechicle => {\n        return vechicle.vin === vin;\n      });\n      return matches.length > 0 ? true : false;\n    },\n\n    removeVIN(vin) {\n      this.vin_data.forEach((vehicle, index) => {\n        if (vehicle.vin === vin) {\n          index > -1 ? this.vin_data.splice(index, 1) : false;\n        }\n      });\n    },\n\n    vinIsValid(vin) {\n      var re = new RegExp(\"^[A-HJ-NPR-Z\\\\d]{8}[\\\\dX][A-HJ-NPR-Z\\\\d]{2}\\\\d{6}$\");\n      return vin.match(re);\n    },\n\n    vinLookup(vin) {\n      const self = this;\n      const vin_data = {\n        vin: vin,\n        make: String,\n        model: String,\n        year: String\n      };\n      fetch(`https://vpic.nhtsa.dot.gov/api/vehicles/DecodeVin/${vin}?format=json`).then(response => response.json()).then(function (data) {\n        console.log('got data');\n        data.Results.forEach(element => {\n          if (element.Variable === 'Make') vin_data.make = element.Value;\n          if (element.Variable === 'Model') vin_data.model = element.Value;\n          if (element.Variable === 'Model Year') vin_data.year = element.Value;\n        });\n        self.$store.commit('addVin', vin_data);\n      });\n    },\n\n    getAllVinData() {\n      const self = this;\n      this.usdot_data.vins.forEach(vin => self.vinLookup(vin));\n    },\n\n    setRoutes() {\n      const self = this;\n      const routes = this.$router.getRoutes();\n      let route_index = 0;\n      this.curr_route = this.$router.currentRoute.value;\n      routes.forEach(function (route, index) {\n        if (route.name === self.curr_route.name) {\n          route_index = index;\n        }\n      });\n      this.route_index = route_index;\n    }\n\n  },\n\n  mounted() {\n    this.setRoutes();\n\n    if (this.vin_data.length === 0) {\n      this.getAllVinData();\n    }\n  }\n\n};","map":{"version":3,"mappings":"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","names":["mapState","name","data","added_vin","computed","usdot_data","state","vin_data","get","$store","set","value","commit","route_index","curr_route_index","methods","addVIN","length","vinIsDuplicate","vinIsValid","vinLookup","vin","matches","filter","vechicle","removeVIN","forEach","vehicle","index","splice","re","RegExp","match","self","make","String","model","year","fetch","then","response","json","console","log","Results","element","Variable","Value","getAllVinData","vins","setRoutes","routes","$router","getRoutes","curr_route","currentRoute","route","mounted"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/CB/Flywheel/src/views/TractorVINs.vue"],"sourcesContent":["<template>\n\t<Transition appear>\n\t\t<div class=\"tw-card\">\n\t\t\t<h1 class=\"tw-heading\">Your Vehicles</h1>\n\t\t\t<div class=\"max-w-lg m-auto text-left\">\n\t\t\t\t<div class=\"pb-9\">\n\t\t\t\t\t<div class=\"p-4 flex justify-between items-center border-b border-slate-300\" v-for=\"vehicle in vin_data\" :key=\"vehicle\">\n\t\t\t\t\t\t<div class=\"text-lg tracking-wider\">\n\t\t\t\t\t\t\t<div class=\"font-display text-xl text-slate-800 tracking-wider font-semibold\" v-text=\"`${vehicle.year} ${vehicle.make} ${vehicle.model}`\"></div>\n\t\t\t\t\t\t\t<div class=\"tracking-widest text-slate-400 text-base uppercase font-medium\" v-text=\"vehicle.vin\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button class=\"tw-btn tw-btn-small bg-red-400 text-white\" @click=\"removeVIN(vehicle.vin)\">Remove</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<label for=\"add_vin\" class=\"mt-4 text-left flex items-center pl-4 pr-4 relative\">\n\t\t\t\t\t\t<input type=\"text\" name=\"add_vin\" id=\"add_vin\" class=\"mr-4 grow uppercase rounded-xl\" :disabled=\"vin_data.length > 9\" v-model=\"added_vin\" required>\n\t\t\t\t\t\t<div class=\"tw-label\">Enter a VIN</div>\n\t\t\t\t\t\t<button class=\"tw-btn tw-btn-small bg-green-400 text-white whitespace-nowrap\" :disabled=\"added_vin.length === 0 || vin_data.length > 9\" @click=\"addVIN()\">Add VIN</button>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<button type=\"button\" class=\"tw-btn mt-5 block m-auto\" @click=\"$router.push({name: 'selectPlan'})\">Next</button>\n\t\t\t</div>\n\t\t</div>\n\t</Transition>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\n\nexport default {\n\tname: 'TractorVINs',\n\tdata(){\n\t\treturn {\n\t\t\tadded_vin: ''\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapState({\n\t\t\tusdot_data: state => state.usdot_data\n\t\t}),\n\t\tvin_data: {\n\t\t\tget(){\n\t\t\t\treturn this.$store.state.vin_data;\n\t\t\t},\n\t\t\tset(value){\n\t\t\t\tthis.$store.commit('updateVinData', value);\n\t\t\t}\n\t\t},\n\t\troute_index: {\n\t\t\tget() {\n\t\t\t\treturn this.$store.state.curr_route_index;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$store.commit('updateRouteIndex', value);\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\taddVIN(){\n\t\t\tif(this.added_vin.length > 0 && !this.vinIsDuplicate(this.added_vin) && this.vinIsValid(this.added_vin)) {\n\t\t\t\tthis.vinLookup(this.added_vin);\n\t\t\t\tthis.added_vin = '';\n\t\t\t}\t\t\t\t\n\t\t},\n\t\tvinIsDuplicate(vin){\n\t\t\tconst matches = this.vin_data.filter(vechicle => {\n\t\t\t\treturn vechicle.vin === vin\n\t\t\t});\n\t\t\treturn matches.length > 0 ? true : false;\n\t\t},\n\t\tremoveVIN(vin) {\n\t\t\tthis.vin_data.forEach((vehicle, index) => {\n\t\t\t\tif (vehicle.vin === vin) {\n\t\t\t\t\tindex > -1 ? this.vin_data.splice(index, 1) : false;\n\t\t\t\t}\n\t\t\t});\t\t\t\n\t\t},\n\t\tvinIsValid(vin){\n\t\t\tvar re = new RegExp(\"^[A-HJ-NPR-Z\\\\d]{8}[\\\\dX][A-HJ-NPR-Z\\\\d]{2}\\\\d{6}$\");\n\t\t\treturn vin.match(re);\n\t\t},\n\t\tvinLookup(vin){\n\t\t\tconst self = this;\n\t\t\tconst vin_data = {\n\t\t\t\tvin: vin,\n\t\t\t\tmake: String,\n\t\t\t\tmodel: String,\n\t\t\t\tyear: String\n\t\t\t};\n\t\t\tfetch(`https://vpic.nhtsa.dot.gov/api/vehicles/DecodeVin/${vin}?format=json`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(function(data){\n\t\t\t\tconsole.log('got data');\n\t\t\t\tdata.Results.forEach(element => {\n\t\t\t\t\tif(element.Variable === 'Make') vin_data.make = element.Value;\n\t\t\t\t\tif(element.Variable === 'Model') vin_data.model = element.Value;\n\t\t\t\t\tif(element.Variable === 'Model Year') vin_data.year = element.Value;\n\t\t\t\t});\n\t\t\t\tself.$store.commit('addVin', vin_data);\n\t\t\t});\n\t\t}, \n\t\tgetAllVinData(){\n\t\t\tconst self = this;\n\t\t\tthis.usdot_data.vins.forEach(vin => self.vinLookup(vin));\n\t\t},\n\t\tsetRoutes() {\n\t\t\tconst self = this;\n\t\t\tconst routes = this.$router.getRoutes();\n\t\t\tlet route_index = 0;\n\n\t\t\tthis.curr_route = this.$router.currentRoute.value;\n\t\t\t\t\n\t\t\troutes.forEach(function(route, index){\n\t\t\t\tif(route.name === self.curr_route.name) {\n\t\t\t\t\troute_index = index;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.route_index = route_index;\n\t\t}\n\t},\n\tmounted(){\n\t\tthis.setRoutes();\n\t\tif(this.vin_data.length === 0) {\n\t\t\tthis.getAllVinData();\n\t\t} \n\t}\n}\n</script>\n\n<style lang=\"scss\">\n</style>"]},"metadata":{},"sourceType":"module"}