{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, Transition as _Transition, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"tw-card\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"tw-heading\"\n}, \"Let's Get Started!\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mb-8 text-slate-500\"\n}, \"Take a few minutes and get a policy started.\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  for: \"usdot\",\n  class: \"block mb-12 relative\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"tw-label text-xl font-body font-light left-1/2 -translate-x-1/2\"\n}, \"Enter your DOT Number\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"label\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      required: \"\",\n      id: \"usdot\",\n      class: \"text-center w-4/5 text-xl font-light pt-4 pb-4 rounded-2xl\",\n      autocomplete: \"off\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $options.usdot_number = $event),\n      onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.verifyDOTNumber && $options.verifyDOTNumber(...args), [\"enter\"]))\n    }, null, 544\n    /* HYDRATE_EVENTS, NEED_PATCH */\n    ), [[_vModelText, $options.usdot_number]]), _hoisted_5]), _createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"tw-btn\",\n      onClick: _cache[2] || (_cache[2] = (...args) => $options.verifyDOTNumber && $options.verifyDOTNumber(...args))\n    }, \"Get Started\")])]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;EAEMA,KAAK,EAAC;;;gCACVC,oBAAgD,KAAhD,EAAgD;EAA3CD,KAAK,EAAC;AAAqC,CAAhD,EAAwB,oBAAxB,EAA0C;AAAA;AAA1C;;gCACAC,oBAAiF,IAAjF,EAAiF;EAA7ED,KAAK,EAAC;AAAuE,CAAjF,EAAgC,8CAAhC,EAA4E;AAAA;AAA5E;;;EACOE,GAAG,EAAC;EAAQF,KAAK,EAAC;;;gCAExBC,oBAAwG,KAAxG,EAAwG;EAAnGD,KAAK,EAAC;AAA6F,CAAxG,EAA6E,uBAA7E,EAAkG;AAAA;AAAlG;;;uBANHG,aAUaC,WAVb,EAUa;IAVDC,MAAM,EAAN;EAUC,CAVb,EAAkB;sBACjB,MAQM,CARNJ,oBAQM,KARN,cAQM,CAPLK,UAOK,EANLC,UAMK,EALLN,oBAGQ,OAHR,cAGQ,iBAFPA,oBAAmL,OAAnL,EAAmL;MAA5KO,IAAI,EAAC,MAAuK;MAAhKC,QAAQ,EAAR,EAAgK;MAAvJC,EAAE,EAAC,OAAoJ;MAA5IV,KAAK,EAAC,4DAAsI;MAAzEW,YAAY,EAAC,KAA4D;iEAA7CC,wBAAYC,OAAiC;MAA9BC,OAAK,mDAAQF,6DAAR,EAAuB,SAAvB;IAAyB,CAAnL;;IAAA,kBAAsIA,wBAE/H,EADPG,UACO,CAHR,CAKK,EADLd,oBAAkF,QAAlF,EAAkF;MAA1EO,IAAI,EAAC,QAAqE;MAA5DR,KAAK,EAAC,QAAsD;MAA5CgB,OAAK,yCAAEJ,6DAAF;IAAuC,CAAlF,EAA8D,aAA9D,CACK,CARN,CAQM,EATW;;;;EAAA,CAAlB","names":["class","_createElementVNode","for","_createBlock","_Transition","appear","_hoisted_2","_hoisted_3","type","required","id","autocomplete","$options","$event","onKeyup","_hoisted_5","onClick"],"sourceRoot":"","sources":["/Users/lukedavid/Web/newco/src/views/EnterDOT.vue"],"sourcesContent":["<template>\n<Transition appear>\n\t<div class=\"tw-card\">\n\t\t<div class=\"tw-heading\">Let's Get Started!</div>\n\t\t<h1 class=\"mb-8 text-slate-500\">Take a few minutes and get a policy started.</h1>\n\t\t<label for=\"usdot\" class=\"block mb-12 relative\">\n\t\t\t<input type=\"text\" required id=\"usdot\" class=\"text-center w-4/5 text-xl font-light pt-4 pb-4 rounded-2xl\" autocomplete=\"off\" v-model=\"usdot_number\" @keyup.enter=\"verifyDOTNumber\">\n\t\t\t<div class=\"tw-label text-xl font-body font-light left-1/2 -translate-x-1/2\">Enter your DOT Number</div>\n\t\t</label>\n\t\t<button type=\"button\" class=\"tw-btn\" @click=\"verifyDOTNumber\">Get Started</button>\n\t</div>\n</Transition>\n</template>\n\n<script>\n\nexport default {\n\tname: 'EnterDOT',\n\tdata() {\n\t\treturn {\n\t\t\t\n\t\t}\n\t},\n\tcomputed: {\n\t\tusdot_number: {\n\t\t\tget() {\n\t\t\t\treturn this.$store.usdot_number;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$store.commit('updateDOTNumber', value);\n\t\t\t}\n\t\t},\n\t\troute_index: {\n\t\t\tget() {\n\t\t\t\treturn this.$store.state.curr_route_index;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$store.commit('updateRouteIndex', value);\n\t\t\t}\n\t\t}\n\t},\t\n\tmethods: {\n\t\tverifyDOTNumber() {\n\t\t\tthis.getDOTInformation(this.$store.state.usdot_number);\n\t\t},\n\t\tabbrState(input, to) {\n\t\t\tvar states = [\n\t\t\t\t['Arizona', 'AZ'],\n\t\t\t\t['Alabama', 'AL'],\n\t\t\t\t['Alaska', 'AK'],\n\t\t\t\t['Arkansas', 'AR'],\n\t\t\t\t['California', 'CA'],\n\t\t\t\t['Colorado', 'CO'],\n\t\t\t\t['Connecticut', 'CT'],\n\t\t\t\t['Delaware', 'DE'],\n\t\t\t\t['Florida', 'FL'],\n\t\t\t\t['Georgia', 'GA'],\n\t\t\t\t['Hawaii', 'HI'],\n\t\t\t\t['Idaho', 'ID'],\n\t\t\t\t['Illinois', 'IL'],\n\t\t\t\t['Indiana', 'IN'],\n\t\t\t\t['Iowa', 'IA'],\n\t\t\t\t['Kansas', 'KS'],\n\t\t\t\t['Kentucky', 'KY'],\n\t\t\t\t['Louisiana', 'LA'],\n\t\t\t\t['Maine', 'ME'],\n\t\t\t\t['Maryland', 'MD'],\n\t\t\t\t['Massachusetts', 'MA'],\n\t\t\t\t['Michigan', 'MI'],\n\t\t\t\t['Minnesota', 'MN'],\n\t\t\t\t['Mississippi', 'MS'],\n\t\t\t\t['Missouri', 'MO'],\n\t\t\t\t['Montana', 'MT'],\n\t\t\t\t['Nebraska', 'NE'],\n\t\t\t\t['Nevada', 'NV'],\n\t\t\t\t['New Hampshire', 'NH'],\n\t\t\t\t['New Jersey', 'NJ'],\n\t\t\t\t['New Mexico', 'NM'],\n\t\t\t\t['New York', 'NY'],\n\t\t\t\t['North Carolina', 'NC'],\n\t\t\t\t['North Dakota', 'ND'],\n\t\t\t\t['Ohio', 'OH'],\n\t\t\t\t['Oklahoma', 'OK'],\n\t\t\t\t['Oregon', 'OR'],\n\t\t\t\t['Pennsylvania', 'PA'],\n\t\t\t\t['Rhode Island', 'RI'],\n\t\t\t\t['South Carolina', 'SC'],\n\t\t\t\t['South Dakota', 'SD'],\n\t\t\t\t['Tennessee', 'TN'],\n\t\t\t\t['Texas', 'TX'],\n\t\t\t\t['Utah', 'UT'],\n\t\t\t\t['Vermont', 'VT'],\n\t\t\t\t['Virginia', 'VA'],\n\t\t\t\t['Washington', 'WA'],\n\t\t\t\t['West Virginia', 'WV'],\n\t\t\t\t['Wisconsin', 'WI'],\n\t\t\t\t['Wyoming', 'WY'],\n\t\t\t];\n\t\t\t/* eslint-disable no-undef */\n\t\t\tif (to == 'abbr'){\n\t\t\t\tinput = input.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n\t\t\t\tfor(let i = 0; i < states.length; i++){\n\t\t\t\t\tif(states[i][0] == input){\n\t\t\t\t\t\treturn(states[i][1]);\n\t\t\t\t\t}\n\t\t\t\t}    \n\t\t\t} else if (to == 'name'){\n\t\t\t\tinput = input.toUpperCase();\n\t\t\t\tfor(let i = 0; i < states.length; i++){\n\t\t\t\t\tif(states[i][1] == input){\n\t\t\t\t\t\treturn(states[i][0]);\n\t\t\t\t\t}\n\t\t\t\t}    \n\t\t\t}\n\t\t},\n\t\tgetDOTInformation(usdot) {\n\t\t\tconst self = this;\n\t\t\tfetch(`https://mobile.fmcsa.dot.gov/qc/services/carriers/id/${usdot}?webKey=27b663ed331bff071a9f02ba8d726e3558a665aa`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(function(data) { \n\t\t\t\tlet obj = data.content;\n\t\t\t\tobj.phyState = self.abbrState(obj.phyState, 'name');\n\n\t\t\t\t// Temporary Values\n\t\t\t\tobj.ownerFirstName = \"Luke\";\n\t\t\t\tobj.ownerLastName = \"David\";\n\t\t\t\tobj.ownerEmail = \"luke@giganticdesign.com\";\n\t\t\t\tobj.ownerPhone = \"563-580-7440\";\n\t\t\t\tobj.contactFirstName = \"\";\n\t\t\t\tobj.contactLastName = \"\";\n\t\t\t\tobj.contactEmail = \"\";\n\t\t\t\tobj.contactPhone = \"\";\n\t\t\t\tobj.vins = ['3ALXA7005JDJP9024', '3ALXA7007LDMM7204', '3ALXA7009LDMM7205', '3ALXA7004HDHZ1163', '3ALXA7009JDJP9026', '3ALXA7009GDHD7190', '3ALXA7002GDHD7189', '1FVXA7CG1GLHD7202', '1FUJA6CKX6LV85137'];\n\t\t\t\t\n\t\t\t\tself.$store.commit('updateDOTData', obj);\n\t\t\t})\n\t\t\t.then(function(){\n\t\t\t\tself.$router.push({name: 'verifyDOT'});\n\t\t\t});\n\t\t},\n\t\tsetRoutes() {\n\t\t\tconst self = this;\n\t\t\tconst routes = this.$router.getRoutes();\n\t\t\tlet route_index = 0;\n\n\t\t\tthis.curr_route = this.$router.currentRoute.value;\n\t\t\t\t\n\t\t\troutes.forEach(function(route, index){\n\t\t\t\tif(route.name === self.curr_route.name) {\n\t\t\t\t\troute_index = index;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.route_index = route_index;\n\t\t}\n\t},\n\tmounted(){\n\t\tthis.setRoutes();\n\t}\n}\n</script>"]},"metadata":{},"sourceType":"module"}