{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Transition as _Transition, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"enter-dot card\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"overline\"\n}, \"Get a Quote\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Enter your DOT number to get started.\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"content\"\n};\nconst _hoisted_5 = {\n  class: \"field fz--large\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    appear: \"\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"fieldset\", null, [_createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      id: \"usdot\",\n      class: \"tac ls--wide\",\n      onInput: _cache[0] || (_cache[0] = $event => $options.validateUSDOT()),\n      placeholder: \"--------\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $options.usdot_number = $event)\n    }, null, 544\n    /* HYDRATE_EVENTS, NEED_PATCH */\n    ), [[_vModelText, $options.usdot_number]])])]), _createElementVNode(\"button\", {\n      type: \"button\",\n      onClick: _cache[2] || (_cache[2] = (...args) => $options.verifyDOTNumber && $options.verifyDOTNumber(...args))\n    }, \"Next\")])])]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;EAEMA,KAAK,EAAC;;;gCACVC,oBAAuC,KAAvC,EAAuC;EAAlCD,KAAK,EAAC;AAA4B,CAAvC,EAAsB,aAAtB,EAAiC;AAAA;AAAjC;;gCACAC,oBAA8C,IAA9C,EAA8C,IAA9C,EAAI,uCAAJ,EAAyC;AAAA;AAAzC;;;EACKD,KAAK,EAAC;;;EAEJA,KAAK,EAAC;;;uBANfE,aAaaC,WAbb,EAaa;IAbDC,MAAM,EAAN;EAaC,CAbb,EAAkB;sBACjB,MAWM,CAXNH,oBAWM,KAXN,cAWM,CAVLI,UAUK,EATLC,UASK,EARLL,oBAOM,KAPN,cAOM,CANLA,oBAIW,UAJX,EAIW,IAJX,EAIW,CAHVA,oBAEM,KAFN,cAEM,iBADLA,oBAA0H,OAA1H,EAA0H;MAAnHM,IAAI,EAAC,MAA8G;MAAvGC,EAAE,EAAC,OAAoG;MAA5FR,KAAK,EAAC,cAAsF;MAAtES,OAAK,sCAAEC,wBAAF,CAAiE;MAA9CC,WAAW,EAAC,UAAkC;iEAAdD,wBAAYE;IAAE,CAA1H;;IAAA,kBAA4GF,wBACvG,CAFN,CAGU,CAJX,CAMK,EADLT,oBAA4D,QAA5D,EAA4D;MAApDM,IAAI,EAAC,QAA+C;MAArCM,OAAK,yCAAEH,6DAAF;IAAgC,CAA5D,EAA+C,MAA/C,CACK,CAPN,CAQK,CAXN,CAWM,EAZW;;;;EAAA,CAAlB","names":["class","_createElementVNode","_createBlock","_Transition","appear","_hoisted_2","_hoisted_3","type","id","onInput","$options","placeholder","$event","onClick"],"sourceRoot":"","sources":["/Users/luke/Desktop/CB/lemonade/src/views/EnterDOT.vue"],"sourcesContent":["<template>\n<Transition appear>\n\t<div class=\"enter-dot card\">\n\t\t<div class=\"overline\">Get a Quote</div>\n\t\t<h1>Enter your DOT number to get started.</h1>\n\t\t<div class=\"content\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"field fz--large\">\n\t\t\t\t\t<input type=\"text\" id=\"usdot\" class=\"tac ls--wide\" @input=\"validateUSDOT()\" placeholder=\"--------\" v-model=\"usdot_number\">\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t<button type=\"button\" @click=\"verifyDOTNumber\">Next</button>\n\t\t</div>\n\t</div>\n</Transition>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport { usdot_data } from '@/assets/data/DOTLookup.js';\nexport default {\n\tname: 'EnterDOT',\n\tdata() {\n\t\treturn {\n\t\t\tmaxlength: 8\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapState({\n\t\t\tusdot: state => state.usdot_number,\n\t\t\tusdot_data: state => state.usdot_data\n\t\t\t\n\t\t}),\n\t\tusdot_number: {\n\t\t\tget() {\n\t\t\t\treturn this.$store.usdot_number;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$store.commit('updateDOTNumber', value);\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tverifyDOTNumber() {\n\t\t\tthis.$store.state.usdot_data = usdot_data;\n\t\t\tthis.$router.push({name: 'verifyDOTLink'});\n\t\t},\n\t\tvalidateUSDOT(){\n\t\t\tconsole.log(this.$el.querySelector('input').value);\n\t\t\t// this.$el.value = this.$el.value.slice(0,this.maxlength);\n\t\t}\n\n\t}\n}\n</script>"]},"metadata":{},"sourceType":"module"}