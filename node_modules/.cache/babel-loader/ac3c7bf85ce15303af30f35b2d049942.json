{"ast":null,"code":"import NavigationHeader from '@/components/NavigationHeader.vue';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'App',\n  components: {\n    NavigationHeader\n  },\n  computed: { ...mapState({\n      usdot_data: state => state.usdot_data\n    })\n  },\n  methods: {\n    createOrder: async () => {\n      // eslint-disable-line no-undef, no-unused-vars\n      // Fetching the data from  your server\n      const title = `Title-${new Date().toUTCString()}`;\n      await fetch(\"http://localhost:4242/create-payment-intent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          amount: 1.00,\n          title: title,\n          shortDescription: \"shortDescription\",\n          paymentDescription: \"paymentDescription\",\n          invoiceNumber: \"invoiceNumber-005\",\n          expiresIn: \"3000\",\n          intent: {\n            paymentTypes: [\"DebitCard\", \"CreditCard\", \"ACH\"]\n          }\n        })\n      }).then(res => res.json()).then(res => {\n        let pluginOption = {\n          theme: \"classic\",\n          // classic, modern, minimal, vibrant\n          container: \"mywidget\" // id of the div to render the widget\n\n        }; //Assigning the payment token received from your server\n\n        let paymentIntentToken = res.paymentIntentToken; // Initialize the plugin with token and options\n        // eslint-disable-next-line no-undef\n\n        let andDone = new AndDone(paymentIntentToken, pluginOption); // Using onload function to perform some action after the widget is loaded  and ready\n        // eslint-disable-next-line no-unused-vars\n\n        andDone.onload = plugin => {\n          console.log(\"Widget loaded successfully\");\n        };\n      });\n    }\n  },\n\n  mounted() {\n    this.createOrder(); // Redirect the user back to the beginning if there is no USDOT data.\n\n    if (Object.keys(this.usdot_data).length === 0) {\n      this.$router.push({\n        name: 'enterDOT'\n      });\n    }\n  }\n\n};","map":{"version":3,"mappings":"AASA,OAAOA,gBAAP,MAA6B,mCAA7B;AACA,SAASC,QAAT,QAAyB,MAAzB;AAEA,eAAe;EACdC,IAAI,EAAE,KADQ;EAEdC,UAAU,EAAE;IACXH;EADW,CAFE;EAKdI,QAAQ,EAAE,EACT,GAAGH,QAAQ,CAAC;MACXI,UAAU,EAAEC,KAAI,IAAKA,KAAK,CAACD;IADhB,CAAD;EADF,CALI;EAUdE,OAAO,EAAE;IACRC,WAAW,EAAE,YAAY;MAAE;MAC1B;MACA,MAAMC,KAAI,GAAK,SAAS,IAAIC,IAAJ,GAAWC,WAAX,EAA0B,EAAlD;MACA,MAAMC,KAAK,CAAC,6CAAD,EAAgD;QAC1DC,MAAM,EAAE,MADkD;QAE1DC,OAAO,EAAE;UAAC,gBAAgB;QAAjB,CAFiD;QAG1DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACpBC,MAAM,EAAE,IADY;UAEpBT,KAAK,EAAEA,KAFa;UAGpBU,gBAAgB,EAAE,kBAHE;UAIpBC,kBAAkB,EAAE,oBAJA;UAKpBC,aAAa,EAAE,mBALK;UAMpBC,SAAS,EAAE,MANS;UAOpBC,MAAM,EAAE;YACPC,YAAY,EAAE,CACb,WADa,EAEb,YAFa,EAGb,KAHa;UADP;QAPY,CAAf;MAHoD,CAAhD,CAAL,CAkBHC,IAlBG,CAkBEC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EAlBR,EAkBoBF,IAlBpB,CAkB0BC,GAAD,IAAS;QACvC,IAAIE,YAAW,GAAG;UACjBC,KAAI,EAAI,SADS;UACG;UACpBC,SAAS,EAAE,UAFM,CAEO;;QAFP,CAAlB,CADuC,CAMvC;;QACA,IAAIC,kBAAkB,GAACL,GAAG,CAACK,kBAA3B,CAPuC,CAQvC;QAEA;;QACA,IAAIC,OAAM,GAAI,IAAIC,OAAJ,CAAYF,kBAAZ,EAAgCH,YAAhC,CAAd,CAXuC,CAavC;QACA;;QACAI,OAAO,CAACE,MAAR,GAAkBC,MAAD,IACjB;UACCC,OAAO,CAACC,GAAR,CAAY,4BAAZ;QACD,CAHA;MAIA,CArCK,CAAN;IAsCD;EA1CQ,CAVK;;EAsDdC,OAAO,GAAE;IAER,KAAK9B,WAAL,GAFQ,CAIR;;IACA,IAAG+B,MAAM,CAACC,IAAP,CAAY,KAAKnC,UAAjB,EAA6BoC,MAA7B,KAAwC,CAA3C,EAA8C;MAC7C,KAAKC,OAAL,CAAaC,IAAb,CAAkB;QAACzC,IAAI,EAAE;MAAP,CAAlB;IACD;EACD;;AA9Dc,CAAf","names":["NavigationHeader","mapState","name","components","computed","usdot_data","state","methods","createOrder","title","Date","toUTCString","fetch","method","headers","body","JSON","stringify","amount","shortDescription","paymentDescription","invoiceNumber","expiresIn","intent","paymentTypes","then","res","json","pluginOption","theme","container","paymentIntentToken","andDone","AndDone","onload","plugin","console","log","mounted","Object","keys","length","$router","push"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/CB/Flywheel/src/App.vue"],"sourcesContent":["<template>\n\t<NavigationHeader/>\n\t<div class=\"pl-5 pr-5\">\n\t<router-view></router-view>\n\t<div id=\"mywidget\"></div>\n\t</div>\n</template>\n\n<script>\nimport NavigationHeader from '@/components/NavigationHeader.vue';\nimport { mapState } from 'vuex';\n\nexport default {\n\tname: 'App',\n\tcomponents: {\n\t\tNavigationHeader\n\t},\n\tcomputed: {\n\t\t...mapState({\n\t\t\tusdot_data: state => state.usdot_data\n\t\t}),\n\t},\n\tmethods: {\n\t\tcreateOrder: async () => { // eslint-disable-line no-undef, no-unused-vars\n\t\t\t// Fetching the data from  your server\n\t\t\tconst title = `Title-${ new Date().toUTCString() }`;\n\t\t\tawait fetch(\"http://localhost:4242/create-payment-intent\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tamount: 1.00,\n\t\t\t\t\ttitle: title,\n\t\t\t\t\tshortDescription: \"shortDescription\",\n\t\t\t\t\tpaymentDescription: \"paymentDescription\",\n\t\t\t\t\tinvoiceNumber: \"invoiceNumber-005\",\n\t\t\t\t\texpiresIn: \"3000\",\n\t\t\t\t\tintent: { \n\t\t\t\t\t\tpaymentTypes: [\n\t\t\t\t\t\t\t\"DebitCard\",\n\t\t\t\t\t\t\t\"CreditCard\",\n\t\t\t\t\t\t\t\"ACH\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t}).then(res=> res.json()).then((res) => {\n\t\t\t\tlet pluginOption ={\n\t\t\t\t\ttheme : \"classic\",  // classic, modern, minimal, vibrant\n\t\t\t\t\tcontainer: \"mywidget\",  // id of the div to render the widget\n\t\t\t\t}\n\n\t\t\t\t//Assigning the payment token received from your server\n\t\t\t\tlet paymentIntentToken=res.paymentIntentToken;\n\t\t\t\t// Initialize the plugin with token and options\n\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tlet andDone = new AndDone(paymentIntentToken, pluginOption); \n\n\t\t\t\t// Using onload function to perform some action after the widget is loaded  and ready\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tandDone.onload = (plugin) =>\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"Widget loaded successfully\");\t\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\tmounted(){\n\n\t\tthis.createOrder();\n\n\t\t// Redirect the user back to the beginning if there is no USDOT data.\n\t\tif(Object.keys(this.usdot_data).length === 0) {\n\t\t\tthis.$router.push({name: 'enterDOT'});\n\t\t}\n\t}\n}\n\n</script>\n\n<style lang=\"scss\">\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n\ninput[type=number]{\n    -moz-appearance: textfield;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}