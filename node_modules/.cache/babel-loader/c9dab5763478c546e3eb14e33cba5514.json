{"ast":null,"code":"export default {\n  name: 'BreadCrumbs',\n\n  data() {\n    return {\n      next_route: String,\n      prev_route: String\n    };\n  },\n\n  computed: {\n    curr_route: {\n      get() {\n        return this.$store.state.curr_route;\n      },\n\n      set(value) {\n        this.$store.commit('updateCurrentRoute', value);\n      }\n\n    } // next_route() {\n    // \tif(typeof this.curr_route != 'undefined') {\n    // \t\tconst self = this;\n    // \t\tconst routes = this.$router.getRoutes();\n    // \t\t// eslint-disable-next-line no-unused-vars\n    // \t\tlet rte_index = Number;\n    // \t\troutes.forEach(function(rte, index){\n    // \t\t\tif(rte.name === self.curr_route) {\n    // \t\t\t\trte_index = index + 1;\n    // \t\t\t}\n    // \t\t});\n    // \t}\n    // \treturn '';\n    // }\n\n  },\n\n  mounted() {\n    this.curr_route = this.$router.currentRoute.name;\n  }\n\n};","map":{"version":3,"mappings":"AAMC,eAAe;EACdA,IAAI,EAAE,aADQ;;EAEdC,IAAI,GAAG;IACN,OAAO;MACNC,UAAU,EAAEC,MADN;MAENC,UAAU,EAAED;IAFN,CAAP;EAIA,CAPa;;EAQdE,QAAQ,EAAE;IACTC,UAAU,EAAE;MACXC,GAAG,GAAG;QACL,OAAO,KAAKC,MAAL,CAAYC,KAAZ,CAAkBH,UAAzB;MACA,CAHU;;MAIXI,GAAG,CAACC,KAAD,EAAQ;QACV,KAAKH,MAAL,CAAYI,MAAZ,CAAmB,oBAAnB,EAAyCD,KAAzC;MACD;;IANW,CADH,CAST;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAIA;IACA;;EAzBS,CARI;;EAmCdE,OAAO,GAAE;IACR,KAAKP,UAAL,GAAkB,KAAKQ,OAAL,CAAaC,YAAb,CAA0Bf,IAA5C;EACD;;AArCc,CAAf","names":["name","data","next_route","String","prev_route","computed","curr_route","get","$store","state","set","value","commit","mounted","$router","currentRoute"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/CB/Flywheel/src/components/BreadCrumbs.vue"],"sourcesContent":["<template>\n\t<div class=\"progress\"></div>\n</template>\n\n<script>\n\n\texport default {\n\t\tname: 'BreadCrumbs',\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tnext_route: String,\n\t\t\t\tprev_route: String\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tcurr_route: {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.$store.state.curr_route;\n\t\t\t\t},\n\t\t\t\tset(value) {\n\t\t\t\t\tthis.$store.commit('updateCurrentRoute', value);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// next_route() {\n\t\t\t// \tif(typeof this.curr_route != 'undefined') {\n\t\t\t// \t\tconst self = this;\n\t\t\t// \t\tconst routes = this.$router.getRoutes();\n\t\t\t// \t\t// eslint-disable-next-line no-unused-vars\n\t\t\t// \t\tlet rte_index = Number;\n\t\t\t// \t\troutes.forEach(function(rte, index){\n\t\t\t// \t\t\tif(rte.name === self.curr_route) {\n\t\t\t// \t\t\t\trte_index = index + 1;\n\t\t\t// \t\t\t}\n\t\t\t// \t\t});\n\t\t\t// \t}\n\n\n\n\t\t\t// \treturn '';\n\t\t\t// }\n\t\t},\n\t\tmounted(){\n\t\t\tthis.curr_route = this.$router.currentRoute.name;\n\t\t}\n\t}\n\t\n\t\n</script>"]},"metadata":{},"sourceType":"module"}