{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pl-5 pr-5\"\n};\nexport function render(_ctx, _cache) {\n  const _component_NavigationHeader = _resolveComponent(\"NavigationHeader\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_NavigationHeader), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_router_view)])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EAEMA,KAAK,EAAC;;;;;;;6DADXC,aAAmBC,2BAAnB,GACAC,oBAGM,KAHN,cAGM,CAFNF,aAA2BG,sBAA3B,CAEM,CAHN","names":["class","_createVNode","_component_NavigationHeader","_createElementVNode","_component_router_view"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/CB/Flywheel/src/App.vue"],"sourcesContent":["<template>\n\t<NavigationHeader/>\n\t<div class=\"pl-5 pr-5\">\n\t<router-view></router-view>\n\n\t</div>\n</template>\n\n<script>\nimport NavigationHeader from '@/components/NavigationHeader.vue';\nimport { mapState } from 'vuex';\n\nexport default {\n\tname: 'App',\n\tcomponents: {\n\t\tNavigationHeader\n\t},\n\tcomputed: {\n\t\t...mapState({\n\t\t\tusdot_data: state => state.usdot_data\n\t\t}),\n\t},\n\tmethods: {\n\t\tcreateOrder: async () => { // eslint-disable-line no-undef, no-unused-vars\n\t\t\t// Fetching the data from  your server\n\t\t\tconst title = `Title-${ new Date().toUTCString() }`;\n\t\t\tawait fetch(\"http://localhost:4242/create-payment-intent\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tamount: 1.00,\n\t\t\t\t\ttitle: title,\n\t\t\t\t\tshortDescription: \"shortDescription\",\n\t\t\t\t\tpaymentDescription: \"paymentDescription\",\n\t\t\t\t\tinvoiceNumber: \"invoiceNumber-005\",\n\t\t\t\t\texpiresIn: \"3000\",\n\t\t\t\t\tintent: { \n\t\t\t\t\t\tpaymentTypes: [\n\t\t\t\t\t\t\t\"DebitCard\",\n\t\t\t\t\t\t\t\"CreditCard\",\n\t\t\t\t\t\t\t\"ACH\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t}).then(res=> res.json()).then((res) => {\n\t\t\t\tlet pluginOption ={\n\t\t\t\t\ttheme : \"classic\",  // classic, modern, minimal, vibrant\n\t\t\t\t\tcontainer: \"mywidget\",  // id of the div to render the widget\n\t\t\t\t}\n\n\t\t\t\t//Assigning the payment token received from your server\n\t\t\t\tlet paymentIntentToken=res.paymentIntentToken;\n\t\t\t\t// Initialize the plugin with token and options\n\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tlet andDone = new AndDone(paymentIntentToken, pluginOption); \n\n\t\t\t\t// Using onload function to perform some action after the widget is loaded  and ready\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tandDone.onload = (plugin) =>\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"Widget loaded successfully\");\t\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\tmounted(){\n\n\t\t// Redirect the user back to the beginning if there is no USDOT data.\n\t\tif(Object.keys(this.usdot_data).length === 0) {\n\t\t\tthis.$router.push({name: 'enterDOT'});\n\t\t}\n\t}\n}\n\n</script>\n\n<style lang=\"scss\">\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n\ninput[type=number]{\n    -moz-appearance: textfield;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}