{"ast":null,"code":"import NavigationHeader from '@/components/NavigationHeader.vue';\nexport default {\n  name: 'App',\n  components: {\n    NavigationHeader\n  },\n  methods: {\n    createOrder: async () => {\n      // eslint-disable-line no-undef, no-unused-vars\n      // Fetching the data from  your server\n      const title = `Title-${new Date().toUTCString()}`;\n      await fetch(\"http://localhost:4242/create-payment-intent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          amount: \"111.00\",\n          title: title,\n          shortDescription: \"shortDescription\",\n          paymentDescription: \"paymentDescription\",\n          invoiceNumber: \"invoiceNumber-005\",\n          expiresIn: \"3000\",\n          intent: {\n            paymentTypes: [\"DebitCard\", \"CreditCard\", \"ACH\"]\n          }\n        })\n      }).then(res => res.json()).then(res => {\n        let pluginOption = {\n          theme: \"classic\",\n          // classic, modern, minimal, vibrant\n          container: \"mywidget\" // id of the div to render the widget\n\n        }; //Assigning the payment token received from your server\n\n        let paymentIntentToken = res.paymentIntentToken; // Initialize the plugin with token and options\n        // eslint-disable-next-line no-undef\n\n        let andDone = new AndDone(paymentIntentToken, pluginOption); // Using onload function to perform some action after the widget is loaded  and ready\n        // eslint-disable-next-line no-unused-vars\n\n        andDone.onload = plugin => {\n          console.log(\"Widget loaded successfully\");\n        };\n      });\n    }\n  },\n\n  mounted() {\n    this.createOrder();\n  }\n\n};","map":{"version":3,"mappings":"AAMA,OAAOA,gBAAP,MAA6B,mCAA7B;AAEA,eAAe;EACdC,IAAI,EAAE,KADQ;EAEdC,UAAU,EAAE;IACXF;EADW,CAFE;EAKdG,OAAO,EAAC;IACPC,WAAW,EAAE,YAAY;MAAE;MAE1B;MACA,MAAMC,KAAI,GAAK,SAAS,IAAIC,IAAJ,GAAWC,WAAX,EAA0B,EAAlD;MACA,MAAMC,KAAK,CAAC,6CAAD,EAAgD;QAC1DC,MAAM,EAAE,MADkD;QAE1DC,OAAO,EAAE;UAAC,gBAAgB;QAAjB,CAFiD;QAG1DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACpBC,MAAM,EAAE,QADY;UAEpBT,KAAK,EAAEA,KAFa;UAGpBU,gBAAgB,EAAE,kBAHE;UAIpBC,kBAAkB,EAAE,oBAJA;UAKpBC,aAAa,EAAE,mBALK;UAMpBC,SAAS,EAAE,MANS;UAOpBC,MAAM,EAAE;YACNC,YAAY,EAAE,CACZ,WADY,EAEZ,YAFY,EAGZ,KAHY;UADR;QAPY,CAAf;MAHoD,CAAhD,CAAL,CAkBHC,IAlBG,CAkBEC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EAlBR,EAkBoBF,IAlBpB,CAkB0BC,GAAD,IAAS;QACvC,IAAIE,YAAW,GAAG;UACjBC,KAAI,EAAI,SADS;UACG;UACpBC,SAAS,EAAE,UAFM,CAEO;;QAFP,CAAlB,CADuC,CAMvC;;QACA,IAAIC,kBAAkB,GAACL,GAAG,CAACK,kBAA3B,CAPuC,CAQvC;QAEA;;QACA,IAAIC,OAAM,GAAI,IAAIC,OAAJ,CAAYF,kBAAZ,EAAgCH,YAAhC,CAAd,CAXuC,CAavC;QACA;;QACAI,OAAO,CAACE,MAAR,GAAkBC,MAAD,IACjB;UAEEC,OAAO,CAACC,GAAR,CAAY,4BAAZ;QAEF,CALA;MAMA,CAvCK,CAAN;IAwCD;EA7CO,CALM;;EAoDdC,OAAO,GAAG;IACR,KAAK9B,WAAL;EACF;;AAtDc,CAAf","names":["NavigationHeader","name","components","methods","createOrder","title","Date","toUTCString","fetch","method","headers","body","JSON","stringify","amount","shortDescription","paymentDescription","invoiceNumber","expiresIn","intent","paymentTypes","then","res","json","pluginOption","theme","container","paymentIntentToken","andDone","AndDone","onload","plugin","console","log","mounted"],"sourceRoot":"","sources":["/Users/lukedavid/Desktop/CB/Flywheel2/src/App.vue"],"sourcesContent":["<template>\n\t<NavigationHeader/>\n\t<router-view></router-view>\n</template>\n\n<script>\nimport NavigationHeader from '@/components/NavigationHeader.vue';\n\nexport default {\n\tname: 'App',\n\tcomponents: {\n\t\tNavigationHeader\n\t},\n\tmethods:{\n\t\tcreateOrder: async () => { // eslint-disable-line no-undef, no-unused-vars\n\n\t\t\t// Fetching the data from  your server\n\t\t\tconst title = `Title-${ new Date().toUTCString() }`;\n\t\t\tawait fetch(\"http://localhost:4242/create-payment-intent\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tamount: \"111.00\",\n\t\t\t\t\ttitle: title,\n\t\t\t\t\tshortDescription: \"shortDescription\",\n\t\t\t\t\tpaymentDescription: \"paymentDescription\",\n\t\t\t\t\tinvoiceNumber: \"invoiceNumber-005\",\n\t\t\t\t\texpiresIn: \"3000\",\n\t\t\t\t\tintent: {\n\t\t\t\t\t\t\tpaymentTypes: [\n\t\t\t\t\t\t\t\t\t\"DebitCard\",\n\t\t\t\t\t\t\t\t\t\"CreditCard\",\n\t\t\t\t\t\t\t\t\t\"ACH\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t}),\n\t\t\t}).then(res=> res.json()).then((res) => {\n\t\t\t\tlet pluginOption ={\n\t\t\t\t\ttheme : \"classic\",  // classic, modern, minimal, vibrant\n\t\t\t\t\tcontainer: \"mywidget\",  // id of the div to render the widget\n\t\t\t\t}\n\n\t\t\t\t//Assigning the payment token received from your server\n\t\t\t\tlet paymentIntentToken=res.paymentIntentToken;\n\t\t\t\t// Initialize the plugin with token and options\n\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tlet andDone = new AndDone(paymentIntentToken, pluginOption); \n\n\t\t\t\t// Using onload function to perform some action after the widget is loaded  and ready\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tandDone.onload = (plugin) =>\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\t\tconsole.log(\"Widget loaded successfully\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},  \n\tmounted() {\n\t\t\tthis.createOrder();\n\t}\n}\n\n</script>\n\n<style lang=\"scss\">\n\t\n// body {\n// \tbackground-color: #f5f5f5;\n// }\n// * {\n// \tbox-sizing: border-box;\n// }\n// #app {\n// \tfont-family: Avenir, Helvetica, Arial, sans-serif;\n// \t-webkit-font-smoothing: antialiased;\n// \t-moz-osx-font-smoothing: grayscale;\n// \ttext-align: center;\n// \tcolor: #2c3e50;\n// \tmargin-top: 60px;\n// \tpadding-bottom: 60px;\n// }\n\n// .v-enter-active,\n// .v-leave-active {\n// \ttransition: 0.5s ease-in-out;\n// }\n\n// .v-enter-from,\n// .v-leave-to {\n// \ttransform: translateY(25px);\n// \topacity: 0;\n// }\n\n// h1 {\n// \tmargin-bottom: .5em;\n// }\n\n// .content {\n// \tmargin-top: 40px;\n// }\n\n// .card {\n// \tborder-radius: 20px;\n// \tmax-width: 500px;\n// \tmargin: 0 auto;\n// \tpadding: 4rem;\n// \tbackground-color: #fff;\n// \tbox-shadow: 2.8px 2.8px 2.2px rgba(0, 0, 0, 0.02),\n// \t\t\t\t6.7px 6.7px 5.3px rgba(0, 0, 0, 0.028),\n// \t\t\t\t12.5px 12.5px 10px rgba(0, 0, 0, 0.035),\n// \t\t\t\t22.3px 22.3px 17.9px rgba(0, 0, 0, 0.042),\n// \t\t\t\t41.8px 41.8px 33.4px rgba(0, 0, 0, 0.05),\n// \t\t\t\t100px 100px 80px rgba(0, 0, 0, 0.07);\n// }\n\n// .overline {\n// \ttext-transform: uppercase;\n// \tletter-spacing: .1em;\n// \tfont-weight: bold;\n// }\n\n// button {\n// \tborder: none;\n// \tfont-size: 14px;\n// \tbackground-color: #7DF4E1;\n// \tpadding: 1em 2em;\n// \tborder-radius: 4px;\n// \tletter-spacing: .1em;\n// \ttext-transform: uppercase;\n// \tfont-weight: 600;\n// \tcolor: #0F2740;\n// \tcursor: pointer;\n// \ttransition: .25s ease-in-out;\n\n// \t&.secondary {\n// \t\tfont-size: 10px;\n\t\t\n// \t}\n\n// \t&.red {\n// \t\tbackground-color: rgb(251, 116, 116);\n// \t}\n\n// \t&.green {\n// \t\tbackground-color: rgb(141, 254, 133);\n// \t}\n// }\n\n// button.disabled {\n// \tbackground-color: rgb(179, 179, 179);\n// }\n\n// button:not(.disabled):hover {\n// \tbox-shadow: 2.8px 2.8px 2.2px rgba(0, 0, 0, 0.011),\n// \t\t\t\t6.7px 6.7px 5.3px rgba(0, 0, 0, 0.016),\n// \t\t\t\t12.5px 12.5px 10px rgba(0, 0, 0, 0.02),\n// \t\t\t\t22.3px 22.3px 17.9px rgba(0, 0, 0, 0.024),\n// \t\t\t\t41.8px 41.8px 33.4px rgba(0, 0, 0, 0.029),\n// \t\t\t\t100px 100px 80px rgba(0, 0, 0, 0.04);\n// }\n\n// fieldset {\n// \tborder: none;\n// \ttext-align: left;\n// \tmax-width: 500px;\t\n// \tmargin: 0 auto;\n// }\n\n// fieldset:not(:last-of-type) {\n// \tborder-bottom: 1px solid #ccc;\n// \tpadding-bottom: 40px;\n// \tmargin: 0 auto 40px;\n// }\n\n// legend {\n// \ttext-transform: uppercase;\n// \tfont-weight: bold;\n// \tmargin-bottom: 16px;\n// }\n\n// .field {\n// \tfont-size: 20px;\n// \tmargin-bottom: 1em;\n// \twidth: 100%;\n// }\n\n\n\n// .field > * {\n// \tdisplay: block;\n// }\n\n// label {\n// \tfont-size: 1.2rem;\n// \tmargin-bottom: 1.4em;\n// \tdisplay: block;\n\n// \t.label {\n// \t\tfont-size: .85em;\n// \t\tfont-weight: bold;\n// \t\tcolor: #666;\n// \t\tmargin-bottom: 0.5em;\n// \t}\n// \tinput:not([type=\"radio\"]){\n// \t\tfont-size: 1em;\n// \t\twidth: 100%;\n// \t\theight: 2.5em;\n// \t\tpadding: 0 .75em;\n// \t\tborder-radius: 4px;\n// \t\tborder: 1px solid #acacacac;\n// \t\ttransition: .25s ease-in-out;\n// \t}\n// \t&.checkbox {\n// \t\tcursor: pointer;\n// \t\tdisplay: flex;\n// \t\talign-content: center;\n\n// \t\t.label {\n// \t\t\tdisplay: flex;\n// \t\t\talign-items: center;\n// \t\t\tpadding-left: .8em;\n// \t\t\tmargin-bottom: 0;\n// \t\t}\n// \t\tinput {\n// \t\t\theight: 1.4rem;\n// \t\t\twidth: 1.4rem;\n// \t\t}\n// \t}\n\n// \t&.radio-inline {\n// \t\tdisplay: flex;\n// \t\talign-items: center;\n// \t\tmargin-bottom: .8em;\n// \t\tinput {\n// \t\t\tmargin: 0;\n// \t\t}\n// \t\t.label {\n// \t\t\tmargin-bottom: 0;\n// \t\t\tpadding-left: 16px;\n// \t\t}\n// \t}\n\t\n// }\n\n// .checkbox-percentage {\n// \twidth: 100%;\n// \tdisplay: flex;\n// \talign-items: center;\n// \tjustify-content: space-between;\n\n// \t.percentage {\n// \t\tposition: relative;\n// \t\tmax-width: 100px;\t\n// \t\t.label {\n// \t\t\tposition: absolute;\n// \t\t\ttop: 50%;\n// \t\t\tright: 0;\n// \t\t\ttransform: translateY(-50%);\n// \t\t\tpadding-right: 10px;\n// \t\t}\n// \t}\n\t\n// }\n\n\n// // label {\n// // \tfont-size: .85em;\n// // \tfont-weight: bold;\n// // \tcolor: #666;\n// // \tmargin-bottom: 0.5em;\n\n\t\n// // }\n\n\n\n// input:hover {\n// \tborder: 1px solid #7DF4E1;\n// }\n\n// input:focus {\n// \tborder: 1px solid #0F2740;\n// \toutline: none;\n// }\n\n// input::-webkit-outer-spin-button,\n// input::-webkit-inner-spin-button {\n// \t-webkit-appearance: none;\n// \tmargin: 0;\n// }\n\n// /* Firefox */\n// input[type=number] {\n// \t-moz-appearance: textfield;\n// }\n\n// .tac {\n// \ttext-align: center;\n// }\n\n// .ls--wide {\n// \tletter-spacing: .11em;\n// }\n// .fz--large {\n// \tfont-size: 30px;\n// }\n\n// .field-group {\n// \tdisplay: flex;\n// \tjustify-content: space-between;\n// }\n\n// .field-group > label {\n// \twidth: calc(50% - 10px);\n// }\n\n\n</style>\n"]},"metadata":{},"sourceType":"module"}