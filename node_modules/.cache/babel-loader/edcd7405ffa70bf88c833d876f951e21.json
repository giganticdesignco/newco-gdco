{"ast":null,"code":"import { mapState } from 'vuex';\nimport BaseInput from \"@/components/BaseInput.vue\";\nexport default {\n  name: 'InsuranceEffectiveDate',\n  components: {\n    BaseInput\n  },\n  computed: { ...mapState({\n      insurance_effective_date: state => state.insurance_effective_date\n    }),\n    insurance_effective_date: {\n      get() {\n        return this.$store.state.insurance_effective_date;\n      },\n\n      set(value) {\n        this.$store.commit('updateInsuranceEffectiveDate', value);\n      }\n\n    },\n    route_index: {\n      get() {\n        return this.$store.state.curr_route_index;\n      },\n\n      set(value) {\n        this.$store.commit('updateRouteIndex', value);\n      }\n\n    }\n  },\n  methods: {\n    nextSection: function () {\n      this.$router.push({\n        name: 'brokerageAuthority'\n      });\n    },\n\n    setRoutes() {\n      const self = this;\n      const routes = this.$router.getRoutes();\n      let route_index = 0;\n      this.curr_route = this.$router.currentRoute.value;\n      routes.forEach(function (route, index) {\n        if (route.name === self.curr_route.name) {\n          route_index = index;\n        }\n      });\n      this.route_index = route_index;\n    },\n\n    createProspect() {\n      const data = {\n        firstname: this.$store.state.usdot_data.contactFirstName,\n        lastname: this.$store.state.usdot_data.contactLastName,\n        company: this.$store.state.usdot_data.legalName,\n        email: this.$store.state.usdot_data.contactEmail,\n        phone: this.$store.state.usdot_data.contactPhone,\n        city: this.$store.state.usdot_data.phyCity,\n        state: this.$store.state.usdot_data.phyState,\n        postal: this.$store.state.usdot_data.phyZipcode\n      };\n      fetch('http://localhost:4200/create-prospect', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n      this.$store.commit('updateDOTData');\n    }\n\n  },\n\n  mounted() {\n    this.setRoutes();\n    this.createProspect();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["mapState","BaseInput","name","components","computed","insurance_effective_date","state","get","$store","set","value","commit","route_index","curr_route_index","methods","nextSection","$router","push","setRoutes","self","routes","getRoutes","curr_route","currentRoute","forEach","route","index","createProspect","data","firstname","usdot_data","contactFirstName","lastname","contactLastName","company","legalName","email","contactEmail","phone","contactPhone","city","phyCity","phyState","postal","phyZipcode","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","error","mounted"],"sourceRoot":"","sources":["/Users/lukedavid/Web/newco/src/views/InsuranceEffectiveDate.vue"],"sourcesContent":["<template>\n\t<Transition appear>\n\t\t<div class=\"tw-card\">\n\t\t\t<h1 class=\"tw-heading\">Insurance Effective Date?</h1>\n\t\t\t<div class=\"max-w-sm m-auto text-left\">\n\t\t\t\t<BaseInput type=\"date\" id=\"insurance_effective_date\" label=\"Date\" max=\"999-12-31\" v-model=\"insurance_effective_date\" />\n\t\t\t\t<button type=\"button\" class=\"tw-btn mt-5 block m-auto\" @click=\"nextSection\">Next</button>\n\t\t\t</div>\n\t\t</div>\n\t</Transition>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport BaseInput from \"@/components/BaseInput.vue\";\n\nexport default {\n\tname: 'InsuranceEffectiveDate',\n\tcomponents: {\n\t\tBaseInput,\n\t},\n\tcomputed: {\n\t\t...mapState({\n\t\t\tinsurance_effective_date: state => state.insurance_effective_date\n\t\t}),\n\t\tinsurance_effective_date: {\n\t\t\tget() {\n\t\t\t\treturn this.$store.state.insurance_effective_date;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$store.commit('updateInsuranceEffectiveDate', value);\n\t\t\t}\n\t\t},\n\t\troute_index: {\n\t\t\tget() {\n\t\t\t\treturn this.$store.state.curr_route_index;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$store.commit('updateRouteIndex', value);\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tnextSection: function() {\n\t\t\tthis.$router.push({name: 'brokerageAuthority'});\n\t\t},\n\t\tsetRoutes() {\n\t\t\tconst self = this;\n\t\t\tconst routes = this.$router.getRoutes();\n\t\t\tlet route_index = 0;\n\n\t\t\tthis.curr_route = this.$router.currentRoute.value;\n\t\t\t\t\n\t\t\troutes.forEach(function(route, index){\n\t\t\t\tif(route.name === self.curr_route.name) {\n\t\t\t\t\troute_index = index;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.route_index = route_index;\n\t\t},\n\t\tcreateProspect(){\n\t\t\tconst data = { \n\t\t\t\tfirstname: this.$store.state.usdot_data.contactFirstName,\n\t\t\t\tlastname: this.$store.state.usdot_data.contactLastName,\n\t\t\t\tcompany: this.$store.state.usdot_data.legalName,\n\t\t\t\temail: this.$store.state.usdot_data.contactEmail,\n\t\t\t\tphone: this.$store.state.usdot_data.contactPhone,\n\t\t\t\tcity: this.$store.state.usdot_data.phyCity,\n\t\t\t\tstate: this.$store.state.usdot_data.phyState,\n\t\t\t\tpostal: this.$store.state.usdot_data.phyZipcode,\n\t\t\t};\n\n\t\t\t\n\t\t\tfetch('http://localhost:4200/create-prospect', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log('Success:', data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\t\t\t\n\t\t\tthis.$store.commit('updateDOTData')\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.setRoutes();\n\t\tthis.createProspect();\n\t}\n}\n</script>"]},"metadata":{},"sourceType":"module"}